//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WAChatDataStoreCoordinator.h"

#import "WAChatDataStoreDelegate-Protocol.h"
#import "WAContactsStorageDelegate-Protocol.h"
#import "WAMessageNotificationCenterDelegate-Protocol.h"
#import "WASyncManagerDelegate-Protocol.h"
#import "WAWebClientDelegate-Protocol.h"
#import "XMPPConnectionDelegate-Protocol.h"

@class CLLocation, CNContactStore, NSArray, NSDate, NSLock, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString, WABizManager, WABlockedContactsList, WAContactsStorage, WADomainFrontingProviderStore, WAMediaUploader, WAMessageMediaDownloader, WAMessageNotificationCenter, WAMessagingService, WANameDirectory, WAProfilePictureManager, WASignalManager, WASyncManager, WAWebClient, XMPPConnection;
@protocol WADeviceDate;

__attribute__((visibility("hidden")))
@interface WAChatManager : WAChatDataStoreCoordinator <WAChatDataStoreDelegate, WAWebClientDelegate, XMPPConnectionDelegate, WASyncManagerDelegate, WAContactsStorageDelegate, WAMessageNotificationCenterDelegate>
{
    WAWebClient *_webClient;
    _Bool _didConnectCallbackRun;
    NSMutableOrderedSet *_outgoingMessagesToMerge;
    _Bool _serverBuildExpired;
    NSMutableDictionary *_outgoingChatStates;
    void *_sharedAddressBook;
    CNContactStore *_sharedContactStore;
    _Bool _needsRefreshChats;
    _Bool _isContactsSyncScheduled;
    _Bool _changeNumberIQRequired;
    NSLock *_timelockParametersLock;
    NSString *_registrationURL;
    NSString *_codeRequestURL;
    NSString *_sameDeviceCheckURL;
    NSString *_twoFactorAuthenticationURL;
    NSString *_statusPendingUpdate;
    NSString *_currentStatus;
    NSDate *_lastServerPropsManualRefreshSuccess;
    NSArray *_serverPropsCompletionBlocks;
    WADomainFrontingProviderStore *_domainFrontingProviderStore;
    _Bool _didReachRegistrationDomain;
    NSDate<WADeviceDate> *_lastRegistrationDomainProbeTime;
    _Bool _changeNumberIQInProgress;
    _Bool _needsAddressBookReload;
    _Bool _addressBookReloadingInProgress;
    _Bool _ignoreAddressBookChangeNotifications;
    _Bool _timelocked;
    NSMutableArray *_statusList;
    NSMutableSet *_navigationBarHintHistory;
    NSDate<WADeviceDate> *_connectionDisconnectDate;
    NSMutableSet *_placeCache;
    CLLocation *_lastKnownLocation;
    NSDate *_timelockStartDate;
    NSDate *_timelockedUntil;
    long long _timelockReasonCode;
    NSString *_phoneNumber;
    NSString *_countryCode;
    WAContactsStorage *_contactsStorage;
    XMPPConnection *_xmppConnection;
    WABizManager *_bizManager;
    WAMessageNotificationCenter *_messageNotificationCenter;
    WAProfilePictureManager *_profilePictureManager;
    WASignalManager *_signalManager;
    WASyncManager *_syncManager;
    WAMessageMediaDownloader *_messageMediaDownloader;
    WAMessagingService *_messagingService;
    WABlockedContactsList *_blockedContactsList;
    WAMediaUploader *_mediaUploader;
    WANameDirectory *_nameDirectory;
    NSDate *_timelockRetryDate;
}

+ (id)alertTextForMessage:(id)arg1;
+ (id)kindsForMessageType:(int)arg1;
@property(copy, nonatomic) NSDate *timelockRetryDate; // @synthesize timelockRetryDate=_timelockRetryDate;
@property(nonatomic, getter=isTimelocked) _Bool timelocked; // @synthesize timelocked=_timelocked;
@property(readonly, nonatomic) WANameDirectory *nameDirectory; // @synthesize nameDirectory=_nameDirectory;
@property(readonly, nonatomic) WAMediaUploader *mediaUploader; // @synthesize mediaUploader=_mediaUploader;
@property(readonly, nonatomic) WABlockedContactsList *blockedContactsList; // @synthesize blockedContactsList=_blockedContactsList;
@property(readonly, nonatomic) WAMessagingService *messagingService; // @synthesize messagingService=_messagingService;
@property(readonly, nonatomic) WAMessageMediaDownloader *messageMediaDownloader; // @synthesize messageMediaDownloader=_messageMediaDownloader;
@property(readonly, nonatomic) WASyncManager *syncManager; // @synthesize syncManager=_syncManager;
@property(readonly, nonatomic) WASignalManager *signalManager; // @synthesize signalManager=_signalManager;
@property(readonly, nonatomic) WAProfilePictureManager *profilePictureManager; // @synthesize profilePictureManager=_profilePictureManager;
@property(readonly, nonatomic) WAMessageNotificationCenter *messageNotificationCenter; // @synthesize messageNotificationCenter=_messageNotificationCenter;
@property(readonly, nonatomic) WABizManager *bizManager; // @synthesize bizManager=_bizManager;
@property(readonly, nonatomic) XMPPConnection *xmppConnection; // @synthesize xmppConnection=_xmppConnection;
@property(readonly, nonatomic) WAContactsStorage *contactsStorage; // @synthesize contactsStorage=_contactsStorage;
@property(nonatomic) _Bool ignoreAddressBookChangeNotifications; // @synthesize ignoreAddressBookChangeNotifications=_ignoreAddressBookChangeNotifications;
@property(nonatomic) _Bool addressBookReloadingInProgress; // @synthesize addressBookReloadingInProgress=_addressBookReloadingInProgress;
@property(nonatomic) _Bool needsAddressBookReload; // @synthesize needsAddressBookReload=_needsAddressBookReload;
@property(readonly, copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(readonly, copy, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(nonatomic) long long timelockReasonCode; // @synthesize timelockReasonCode=_timelockReasonCode;
@property(copy, nonatomic) NSDate *timelockedUntil; // @synthesize timelockedUntil=_timelockedUntil;
@property(copy, nonatomic) NSDate *timelockStartDate; // @synthesize timelockStartDate=_timelockStartDate;
@property(retain, nonatomic) CLLocation *lastKnownLocation; // @synthesize lastKnownLocation=_lastKnownLocation;
@property(readonly, nonatomic) NSMutableSet *placeCache; // @synthesize placeCache=_placeCache;
@property(readonly, nonatomic) _Bool changeNumberIQInProgress; // @synthesize changeNumberIQInProgress=_changeNumberIQInProgress;
@property(copy, nonatomic) NSDate<WADeviceDate> *connectionDisconnectDate; // @synthesize connectionDisconnectDate=_connectionDisconnectDate;
@property(readonly, nonatomic) NSMutableSet *navigationBarHintHistory; // @synthesize navigationBarHintHistory=_navigationBarHintHistory;
@property(readonly, nonatomic) NSMutableArray *statusList; // @synthesize statusList=_statusList;
- (void).cxx_destruct;
- (void)messageNotificationCenter:(id)arg1 needsChatSessionMarkedAsRead:(id)arg2;
- (_Bool)isWebClientActiveForMessageNotificationCenter:(id)arg1;
- (void)blockedContactListDidChange:(id)arg1;
- (void)statusPrivacyPolicyDidChange:(id)arg1;
- (void)changeNumberFailedWithError:(id)arg1;
- (void)changeNumberFinishedWithAccountInfo:(id)arg1;
- (void)requestChangeNumberIfNecessary;
- (void)performOnConnect;
- (void)syncManager:(id)arg1 didFinishSyncWithResult:(int)arg2 failureReason:(int)arg3;
- (void)contactsStorage:(id)arg1 didAddOrUpdateContacts:(id)arg2 didRemoveJIDs:(id)arg3 removeMissingJIDs:(_Bool)arg4;
- (void)contactsStorageDidUpdateStatus:(id)arg1;
- (void)contactsStorageDidUpdateContacts:(id)arg1;
- (void)postContactsVisualRepresentationUpdatedNotificationWithJIDs:(id)arg1;
- (id)outgoingMessagesInSharedItemOutboxes;
- (void)resetTimelockRetryDate;
- (void)checkTimelockExpiration;
- (void)loadTimelockParameters;
- (void)saveTimelockParameters;
- (void)setTimelockedUntil:(id)arg1 retryDate:(id)arg2 withReasonCode:(long long)arg3;
- (void)resetTimelock;
- (id)localizedChatActivityStringForJID:(id)arg1;
- (id)localizedChatActivityStringForContactWithJID:(id)arg1;
- (id)localizedChatActivityStringForGroupWithJID:(id)arg1;
- (void)updateChatStateIfNeededForJID:(id)arg1;
- (void)changeOutgoingChatState:(unsigned long long)arg1 forJID:(id)arg2;
- (unsigned long long)outgoingChatStateForJID:(id)arg1;
- (void)processIncomingMessageStatusChangeRequests:(id)arg1;
- (void)setJID:(id)arg1 mutedUntil:(id)arg2 notifyWebClient:(_Bool)arg3;
- (void)changeNameOfList:(id)arg1 to:(id)arg2;
- (void)markStatusAsSeen:(id)arg1 onWebClient:(_Bool)arg2;
- (void)sendReadReceiptsForMessagesBeforeAndIncludingMessage:(id)arg1 inChatSession:(id)arg2;
- (void)commitReadTransactions:(id)arg1;
- (id)internalSetChatSession:(id)arg1 unreadCount:(int)arg2 mostRecentReadMessage:(id)arg3 fromWebClient:(_Bool)arg4 sendReadReceipts:(_Bool)arg5;
- (void)siriDidReadMessages:(id)arg1 inChatWithJID:(id)arg2;
- (int)markMessagesReadInChatSession:(id)arg1 mostRecentNewlyReadMessage:(id)arg2 fromWebClient:(_Bool)arg3;
- (_Bool)markMessageRead:(id)arg1 readCount:(long long)arg2 fromWebClient:(_Bool)arg3;
- (long long)markMessagesReadBySiri:(id)arg1 inChatSession:(id)arg2;
- (void)markChatSessions:(id)arg1 read:(_Bool)arg2 fromWebClient:(_Bool)arg3 sendReadReceipts:(_Bool)arg4;
- (void)verifiedNameDidUpdate:(id)arg1;
- (void)pushNameChanged:(id)arg1;
- (void)prepareChatSession:(id)arg1;
- (void)failedUploadNotifyForMessage:(id)arg1;
- (void)requestFreshServerProps;
- (void)requestFreshServerPropsWithCompletion:(CDUnknownBlockType)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)probeDomainFrontingProvidersIfNecessary;
- (_Bool)beginDomainFrontingRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getOrGenerateRecoveryTokenForPhoneNumber:(id)arg1;
- (void)beginFetchWithRequestURLString:(id)arg1 waHostIfProxying:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)wipeForTwoFactorAuthenticationForPhoneNumber:(id)arg1 countryCode:(id)arg2 wipeToken:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)resetTwoFactorAuthenticationViaEmailForPhoneNumber:(id)arg1 countryCode:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)verifyTwoFactorAuthenticationCode:(id)arg1 phoneNumber:(id)arg2 countryCode:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)registerWithVerificationCode:(id)arg1 entryMethod:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestVerificationCodeUsingMethod:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)performSameDeviceCheckForPhoneNumber:(id)arg1 countryCode:(id)arg2 recoveryToken:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)performSameDeviceCheckForPhoneNumber:(id)arg1 countryCode:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)processVerificationServerResponse:(id)arg1 error:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)resetAuthInfo;
- (id)refreshChats;
- (id)refreshChatSessionsForUnknownContacts:(id)arg1 contactsMOC:(id)arg2;
- (id)allUnknownJIDsInChatSessions:(id)arg1;
- (id)refreshChatSessionsForKnownContacts:(id)arg1 contactsMOC:(id)arg2;
- (id)allLegacyContactIdentifiersInChatSessions:(id)arg1;
- (id)allContactIdentifiersInChatSessions:(id)arg1;
- (id)refreshChatSessionsAfterAddressBookReloadWithContext:(id)arg1;
- (void)reset;
- (void)saveChangesInContact:(id)arg1;
- (void)reloadDataFromCNContact:(id)arg1 whatsAppID:(id)arg2;
- (void)reloadDataFromABRecord:(void *)arg1 whatsAppID:(id)arg2;
- (void)reloadUnknownChatsWithContacts:(id)arg1;
- (void)chatSessionTransactionDidUnhideChatSession:(id)arg1;
- (void)enableContactsSync;
- (void)reloadAddressBookWithCompletion:(CDUnknownBlockType)arg1;
- (void)reloadAddressBookIfNeeded;
- (void)setNeedsAddressBookReload;
@property(readonly, nonatomic) NSLock *addressBookMutationLock;
- (void)contactStoreDidChange:(id)arg1;
@property(readonly, nonatomic) CNContactStore *sharedContactStore;
@property(readonly, nonatomic) void *sharedAddressBook;
@property(readonly, nonatomic) NSString *twoFactorAuthenticationURL;
@property(readonly, nonatomic) NSString *sameDeviceCheckURL;
@property(readonly, nonatomic) NSString *codeRequestURL;
@property(readonly, nonatomic) NSString *registrationURL;
- (void)processRegistrationJSONResponse:(id)arg1;
- (id)fullPhoneNumber:(_Bool)arg1;
- (id)fullPhoneNumber;
- (void)setCountryCode:(id)arg1 phoneNumber:(id)arg2;
- (void)dealloc;
- (id)initWithChatDataStores:(id)arg1 contactsStorage:(id)arg2 bizManager:(id)arg3 messageNotificationCenter:(id)arg4 profilePictureManager:(id)arg5 signalManager:(id)arg6 messageMediaDownloader:(id)arg7 mediaUploader:(id)arg8 messagingService:(id)arg9 blockedContactsList:(id)arg10 xmppConnection:(id)arg11 nameDirectory:(id)arg12 syncManager:(id)arg13;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfNumberChangedFromChatSession:(id)arg2 toChatSession:(id)arg3;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfNameChangeInChatSessions:(id)arg2;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfModifyTagUpdateOfChatSession:(id)arg2;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfStarred:(_Bool)arg2 messages:(id)arg3 inChatSession:(id)arg4;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfAllChatSessionsArchived:(_Bool)arg2;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfUpdatedPinnedStateOfChatSession:(id)arg2;
- (void)chatDataStoreDidDeleteAllChatSessions:(id)arg1;
- (void)chatDataStoreDidClearAllChatSessions:(id)arg1;
- (void)chatDataStore:(id)arg1 didBulkDeleteMessagesInChatSession:(id)arg2 beforeDate:(id)arg3 ofTypes:(id)arg4 shouldDeleteStarred:(_Bool)arg5;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfDeletedMessages:(id)arg2 inChatSession:(id)arg3;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfClearedChatSession:(id)arg2;
- (void)chatDataStore:(id)arg1 shouldNotifyWebClientOfDeletedChatSession:(id)arg2;
- (void)chatDataStore:(id)arg1 shouldMarkStatusAsSeenInWebClient:(id)arg2;
- (void)chatDataStore:(id)arg1 shouldShowUploadErrorForMessage:(id)arg2;
- (void)chatDataStore:(id)arg1 shouldForwardAddedMessageToWebClient:(id)arg2;
- (id)predicateForChatListFetchRequest;
- (void)didLogOutCurrentSessionInWebClient:(id)arg1;
- (void)webClient:(id)arg1 recentCallOfferForCallID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 shouldAnswerCall:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 didRelayCallOffer:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 didDisableLocationSharingWithJID:(id)arg2 requestInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didUnsubscribeFromLocationUpdatesFromJID:(id)arg2 requestInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didSubscribeToLocationUpdatesFromJID:(id)arg2 reportParticipants:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 locationSendersInChatWithJID:(id)arg2 context:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)lastReportedOwnLocationForChat:(id)arg1;
- (void)webClient:(id)arg1 displayedMessageNotificationsWithCompletion:(CDUnknownBlockType)arg2;
- (void)webClient:(id)arg1 didDismissChangeNumberNotificationForChatJID:(id)arg2;
- (void)webClient:(id)arg1 didSetStatusPrivacyTo:(long long)arg2 jids:(id)arg3;
- (long long)webClient:(id)arg1 didPin:(_Bool)arg2 chatWithJID:(id)arg3 pinDate:(id)arg4;
- (long long)webClient:(id)arg1 didSetMute:(_Bool)arg2 ofStatusWithJID:(id)arg3;
- (id)webClient:(id)arg1 mostContactedChatsWithPreferredContentType:(long long)arg2;
- (void)webClient:(id)arg1 vCardsFromKnownContactsForWhatsAppID:(id)arg2 context:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (long long)webClient:(id)arg1 didAddContact:(id)arg2;
- (id)webClient:(id)arg1 starredMessagesInChatWithJID:(id)arg2 olderThanMessageID:(id)arg3 limit:(unsigned long long)arg4 gifOnly:(_Bool)arg5 context:(id)arg6;
- (void)webclient:(id)arg1 fetchMessagesMatchingSearchTerm:(id)arg2 inChatWithJID:(id)arg3 offset:(unsigned long long)arg4 limit:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;
- (void)webClient:(id)arg1 allWhatsAppableContactsWithCompletion:(CDUnknownBlockType)arg2;
- (id)allPushNamesForWebClient:(id)arg1;
- (id)webClient:(id)arg1 allChatSessionsInContext:(id)arg2;
- (void)webClient:(id)arg1 didSetBlockedState:(_Bool)arg2 ofUserWithJID:(id)arg3 reason:(id)arg4 requestInfo:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)webClient:(id)arg1 didRequestResendMessage:(id)arg2;
- (void)webClient:(id)arg1 didSetGroupWithJID:(id)arg2 toLockedState:(_Bool)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didSetGroupWithJID:(id)arg2 toAnnouncementOnly:(_Bool)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didCreateGroupWithSubject:(id)arg2 description:(id)arg3 descriptionID:(id)arg4 participants:(id)arg5 announcementOnly:(_Bool)arg6 locked:(_Bool)arg7 requestInfo:(id)arg8 completion:(CDUnknownBlockType)arg9;
- (void)webClient:(id)arg1 didChangeDescriptionOfGroupWithJID:(id)arg2 to:(id)arg3 descriptionID:(id)arg4 previousID:(id)arg5 requestInfo:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)webClient:(id)arg1 didChangeSubjectOfGroupWithJID:(id)arg2 to:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didLeaveGroupWithJID:(id)arg2 requestInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didDemoteAdmins:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didPromoteParticipants:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didAddParticipants:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didRemoveParticipants:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didRequestMediaUploadForMessageID:(id)arg2 inChatWithJID:(id)arg3 extraRecipientJIDs:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didDeletePictureForChatWithJID:(id)arg2 requestInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didSetPicture:(id)arg2 forChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didSetSpamStatus:(_Bool)arg2 ofChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (long long)webClient:(id)arg1 didUnstarAllMessagesInChatWithJID:(id)arg2;
- (long long)didUnstarAllMessagesInWebClient:(id)arg1;
- (long long)webClient:(id)arg1 didSetStarredState:(_Bool)arg2 ofMessageIDs:(id)arg3 inChatWithJID:(id)arg4;
- (long long)webClient:(id)arg1 didSetMuteDate:(id)arg2 fromMuteDate:(id)arg3 ofChatWithJID:(id)arg4;
- (long long)webClient:(id)arg1 didSetArchivedState:(_Bool)arg2 ofChatWithJID:(id)arg3 messageID:(id)arg4;
- (long long)webClient:(id)arg1 didDeleteMessageIDs:(id)arg2 inChatWithJID:(id)arg3;
- (void)webClient:(id)arg1 didClearChatWithJID:(id)arg2 includingStarred:(_Bool)arg3 lastMessageID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (long long)webClient:(id)arg1 didDeleteChatWithJID:(id)arg2 messageID:(id)arg3;
- (void)webClient:(id)arg1 didPlayIncomingMessageWithStanzaID:(id)arg2 participant:(id)arg3 inChatWithJID:(id)arg4;
- (void)webClient:(id)arg1 didUpdateStatus:(id)arg2 requestInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (long long)webClient:(id)arg1 didSeeStatus:(id)arg2 inChatWithJID:(id)arg3;
- (long long)webClient:(id)arg1 didReadUntilMessageID:(id)arg2 inChatWithJID:(id)arg3 readCount:(long long)arg4;
- (_Bool)webClient:(id)arg1 didRelayMessage:(id)arg2;
- (id)webClient:(id)arg1 profilePictureItemForJID:(id)arg2 context:(id)arg3;
- (id)webClient:(id)arg1 existingOutgoingMessageWithStanzaID:(id)arg2 inChatSessionWithJID:(id)arg3 context:(id)arg4;
- (id)webClient:(id)arg1 chatSessionForJID:(id)arg2 context:(id)arg3;
- (void)webClient:(id)arg1 didChangeOutgoingChatStateToJID:(id)arg2;
- (void)webClient:(id)arg1 didSubscribeToJID:(id)arg2;
- (id)webClient:(id)arg1 outgoingMessagesAndPTTWithOrAfterMessageID:(id)arg2 inChatSession:(id)arg3;
- (id)webClient:(id)arg1 statusMessagesInChatSession:(id)arg2;
- (id)webClient:(id)arg1 recentMessagesForChatSession:(id)arg2 activityLevel:(long long)arg3;
- (id)webClient:(id)arg1 existingChatSessionsForJIDs:(id)arg2 context:(id)arg3;
- (unsigned long long)webClient:(id)arg1 countMediaMessagesInChatSession:(id)arg2;
- (unsigned long long)webClient:(id)arg1 countMessagesInChatSession:(id)arg2 ofType:(int)arg3;
- (id)webClient:(id)arg1 mediaMessagesInChatSession:(id)arg2 count:(unsigned long long)arg3 withRelation:(unsigned long long)arg4 toMessageID:(id)arg5;
- (id)webClient:(id)arg1 messagesInChatSession:(id)arg2 ofType:(int)arg3 count:(unsigned long long)arg4 withRelation:(unsigned long long)arg5 toMessageID:(id)arg6;
- (id)webClient:(id)arg1 messagesInChatSession:(id)arg2 count:(unsigned long long)arg3 withRelation:(unsigned long long)arg4 toMessageID:(id)arg5;
- (void)notifyWebClientOfDismissedChangeNumberNotificationForChatSession:(id)arg1;
- (void)notifyWebClientOfAddedOrUpdatedContactsWithJIDs:(id)arg1 removedJIDs:(id)arg2 removeMissingJIDs:(_Bool)arg3;
- (long long)unstarMessagesWithJIDs:(id)arg1;
- (void)forwardMostContactedChatsToWebClient;
- (void)forwardCallOfferToWebClient:(id)arg1;
- (void)notifyWebClientOfLiveLocationUpdateFromSenderJID:(id)arg1 message:(id)arg2 elapsed:(long long)arg3;
- (void)notifyWebClientOfResultCode:(long long)arg1 forRequestID:(id)arg2;
- (void)notifyWebClientOfUpdatesToMessage:(id)arg1;
- (void)notifyWebClientOfMessageStatusChangeInMessage:(id)arg1;
- (void)notifyWebClientOfModifyTagChangeForChatSession:(id)arg1;
@property(readonly, nonatomic, getter=isWebClientActive) _Bool webClientActive;
- (void)removeAllWebClientSessions;
- (void)removeWebClientSessionWithData:(id)arg1;
- (void)beginNewWebClientSessionWithQRCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)allSavedWebClientSessionDataObjects;
- (_Bool)hasActiveWebClientSession;
- (_Bool)isWebClientAvailable;
- (_Bool)isWebClientSupported;
- (void)processIncomingMediaRetryNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)processIncomingAuthNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)processIncomingServerNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)xmppConnection:(id)arg1 didReceiveCallRekeyReceipt:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveCallOfferReceipt:(id)arg2;
- (void)xmppConnectionDidChangeNetworkStateDuringCall:(id)arg1;
- (void)xmppConnection:(id)arg1 didReceiveCallAck:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveIncomingCallStanza:(id)arg2;
- (void)xmppConnection:(id)arg1 callStanzaDidTimeOut:(id)arg2;
- (void)xmppConnectionDidReceiveOfflineMarker:(id)arg1;
- (_Bool)xmppConnection:(id)arg1 didReceiveMessages:(id)arg2 error:(out id *)arg3;
- (void)xmppConnection:(id)arg1 didReceiveOfflineReceiptWithStanzas:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)xmppConnection:(id)arg1 didReceiveRetryReceiptForStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 edit:(long long)arg5 registrationId:(id)arg6 retryCount:(unsigned int)arg7;
- (void)xmppConnection:(id)arg1 didReceiveServerErrorForOutgoingMessagesWithStanzas:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4;
- (void)xmppConnection:(id)arg1 didReceiveServerErrorAckForIncomingMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 edit:(long long)arg5;
- (void)xmppConnection:(id)arg1 serverTimeChanged:(id)arg2 shift:(double)arg3;
- (void)xmppConnectionStopGroupLocationSharing:(id)arg1;
- (_Bool)xmppConnection:(id)arg1 startLocationSharingForGroup:(id)arg2 duration:(int)arg3;
- (void)xmppConnection:(id)arg1 dirtyFlagsReceived:(id)arg2 timestamp:(id)arg3;
- (void)xmppConnection:(id)arg1 didRequestIncomingMessageStatusChanges:(id)arg2;
- (unsigned long long)xmppConnection:(id)arg1 statusChanged:(int)arg2 forOutgoingMessagesWithStanzas:(id)arg3 fromJID:(id)arg4 participantJID:(id)arg5 userData:(id)arg6;
- (void)xmppConnection:(id)arg1 chatStateChanged:(unsigned long long)arg2 forJID:(id)arg3 participantJID:(id)arg4;
- (void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2 forJID:(id)arg3;
- (void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2;
- (void)xmppConnectionDidFinishProcessingOfflineMessages:(id)arg1;
- (void)xmppConnectionDidDisconnect:(id)arg1;
- (void)xmppConnectionDidNotAuthenticate:(id)arg1 failureCode:(long long)arg2 lockDuration:(double)arg3 retryAfter:(double)arg4 tempBanReasonCode:(long long)arg5;
- (void)xmppConnectionDidAuthenticate:(id)arg1;
- (void)xmppConnectionDidConnect:(id)arg1;
- (void)xmppConnection:(id)arg1 stateChanged:(unsigned long long)arg2;
- (void)setupXMPP;
- (void)updateStatus:(id)arg1 webClientRequestID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveStatusList;
- (void)deleteAllStatusMessages;
- (void)resetStatusMessages;
- (void)loadStatusMessages;
- (id)statusListFilePath;
@property(readonly, copy, nonatomic) NSString *statusPendingUpdate;
@property(copy, nonatomic) NSString *currentStatus;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

