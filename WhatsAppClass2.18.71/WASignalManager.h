//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WAPersistentRequestManagerRegistering-Protocol.h"
#import "WASignalCoordinatorDelegate-Protocol.h"
#import "WASignalKeyStoreDelegate-Protocol.h"
#import "WAUpgradeCallback-Protocol.h"

@class NSDate, NSMutableArray, NSMutableDictionary, NSString, WASignalAddress, WASignalCoordinator, WASignalKeyBundle, XMPPConnection;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface WASignalManager : NSObject <WASignalKeyStoreDelegate, WASignalCoordinatorDelegate, WAUpgradeCallback, WAPersistentRequestManagerRegistering>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    WASignalCoordinator *_signalCoordinator;
    NSMutableDictionary *_pendingPrekeyTasks;
    NSMutableDictionary *_groupSessionSyncedCache;
    _Bool _registrationInProgress;
    _Bool _requestRegistrationOnIdMismatchPermitted;
    _Bool _digestRequestPending;
    _Bool _senderKeyRotationRequestPending;
    int _prekeyRequestBackoffIndex;
    NSDate *_prekeyRequestAvailabilityDate;
    NSMutableArray *_clientServerKeyBundleSyncCompletionHandlers;
    _Bool _needsRegistration;
    WASignalKeyBundle *_localKeyBundle;
    XMPPConnection *_xmppConnection;
}

+ (void)wa_didUpgradeFrom:(id)arg1 to:(id)arg2;
+ (float)destinationEnumFromJID:(id)arg1;
+ (float)statsFromCiphertextType:(unsigned long long)arg1;
+ (void)recordDecryptFieldStatEventForJid:(id)arg1 decryptRequest:(id)arg2 decryptedProtobuf:(id)arg3 isCall:(_Bool)arg4 retryCount:(unsigned char)arg5 decryptError:(id)arg6;
+ (void)recordDecryptFieldStatEventForCallWithJid:(id)arg1 decryptRequest:(id)arg2 retryCount:(unsigned char)arg3 decryptError:(id)arg4;
+ (void)recordDecryptFieldStatEventForMesssageWithJid:(id)arg1 decryptRequest:(id)arg2 decryptedProtobuf:(id)arg3 retryCount:(unsigned char)arg4 decryptError:(id)arg5;
+ (void)recordEncryptFieldStatEventForSharedItem:(id)arg1 withEncryptResult:(id)arg2 retryCount:(unsigned char)arg3;
+ (void)recordEncryptFieldStatEventForMessage:(id)arg1 withEncryptResult:(id)arg2 retryCount:(unsigned char)arg3;
+ (id)stableIdentifierFromJid:(id)arg1;
@property _Bool needsRegistration; // @synthesize needsRegistration=_needsRegistration;
@property(readonly, nonatomic) XMPPConnection *xmppConnection; // @synthesize xmppConnection=_xmppConnection;
@property(retain) WASignalKeyBundle *localKeyBundle; // @synthesize localKeyBundle=_localKeyBundle;
- (void).cxx_destruct;
- (void)shimForOrderingWithCompletion:(CDUnknownBlockType)arg1;
- (void)registerHandlersForPersistentRequestManager:(id)arg1;
- (id)sharedObjectKeyForPersistentRequestManager:(id)arg1;
- (void)xmppConnectionStateDidChange:(id)arg1;
- (void)keyStore:(id)arg1 detectedIdentityChangedForRecipientId:(long long)arg2;
- (void)keyStore:(id)arg1 failedWithError:(id)arg2;
@property(readonly, nonatomic) WASignalAddress *userSignalAddress;
- (void)didReceiveIdentityChangedNotificationForJid:(id)arg1;
- (void)enqueueCompletionHandlerForClientServerKeyBundleSync:(CDUnknownBlockType)arg1;
- (void)didReceiveDigestCheckNeededEvent;
- (void)clearLocalSenderKeySessionForGroup:(id)arg1;
- (void)didReceivePrekeyUploadRequestWithCurrentKeyCount:(unsigned long long)arg1;
- (void)didReceiveServerCheckLocalRegistrationId:(unsigned int)arg1;
- (void)processBundle:(id)arg1 withError:(id)arg2 forJid:(id)arg3;
- (void)processBundles:(id)arg1 jidsWithSpecificErrors:(id)arg2;
- (void)requestPrekeysForTask:(id)arg1;
- (void)requestIdentityForJid:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)groupSessionSyncedCache;
- (id)signalCoordinator;
- (id)workQueue;
- (id)createSignedPrekeyRotationRequest;
- (void)requestSignedPrekeyRotation;
- (void)processClientServerKeyBundleSyncCompletionHandlersWithResult:(unsigned long long)arg1 error:(id)arg2;
- (id)createDigestRequest;
- (void)checkServerDigest;
- (id)createRegistrationRequest;
- (void)registerWithServer;
- (void)resetPrekeyBackoff;
- (void)maybeTrickleGenerateSomePrekeys;
- (void)cleanupKeyStoreWithCompletion:(CDUnknownBlockType)arg1;
- (void)resetPersistentStateImpl;
- (void)resetPersistentState;
- (_Bool)loadWithURL:(id)arg1;
- (void)dealloc;
- (id)initWithXMPPConnection:(id)arg1 urlToKeyStore:(id)arg2;
- (void)handleDecryptResultForRequest:(id)arg1 protobuf:(id *)arg2 decryptJournalId:(id *)arg3 error:(id *)arg4;
- (void)clearDecryptJournalEntriesForJournalIds:(id)arg1;
- (void)decryptGroupMessageWithIndividualRequest:(id)arg1 groupRequest:(id)arg2 withDecryptJournalId:(id)arg3 forGroupJid:(id)arg4 participantJid:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)decryptIndividualMessageWithRequest:(id)arg1 withDecryptJournalId:(id)arg2 forUserJid:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)synchronousBlockingOnDecryptVeryBad;
- (void)encryptDirectedMessage:(id)arg1 forGroupJid:(id)arg2 participantJid:(id)arg3 senderKeyData:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)encryptGroupMessage:(id)arg1 forGroupJid:(id)arg2 senderKeyData:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)encryptGroupMessage:(id)arg1 forGroupJid:(id)arg2 participantJid:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)encryptMessage:(id)arg1 forUserJids:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)encryptMessage:(id)arg1 forJid:(id)arg2 participant:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)markSenderKeySentForAllParticipantsOfGroupWithJid:(id)arg1;
- (void)prefetchSessionsForJids:(id)arg1;
- (void)requestSignalIdentityPublicKeyFromServerForJID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestPrekeysForJid:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchSignalIdentityPublicKeyForJid:(id)arg1 requestFromServerIfNeeded:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)fetchIdentityPublicKeyForJid:(id)arg1;
- (void)fetchSignalFingerprintForJid:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleLocationEncryptionError:(id)arg1;
- (void)fetchJidsHavingSenderKeysForLocation:(CDUnknownBlockType)arg1;
- (void)fetchJidsNeedingSenderKeysForLocation:(CDUnknownBlockType)arg1;
- (id)locationGroupJID;
- (void)constructSenderKeyDistributionMessageDataWithFetch:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)invalidateLocationSenderKey;
- (void)markSenderKeySentForLocationParticipant:(id)arg1 if:(CDUnknownBlockType)arg2;
- (void)markSenderKeySentForAllLocationParticipantsIf:(CDUnknownBlockType)arg1;
- (void)encryptLocation:(id)arg1 participant:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)processLocationKeyDistributionMessage:(id)arg1 from:(id)arg2;
- (void)decryptLocationKeyDistributionMessage:(id)arg1 sender:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)decryptLocation:(id)arg1 participantJid:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)processIncomingEncryptionNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleDigestRequestNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleIdentityChange:(id)arg1 notification:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handlePrekeyUploadRequest:(id)arg1 notification:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performAfterInit;
- (_Bool)decryptMessageWithRequest:(id)arg1 forSignalAddress:(id)arg2 plaintextMessage:(out id *)arg3 error:(out id *)arg4;
- (void)computeFanoutResultsForRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)fanoutResultsForRequest:(id)arg1 error:(id *)arg2;
- (_Bool)encryptIndividualRequest:(id)arg1 result:(out id *)arg2 error:(out id *)arg3;
- (id)encryptPlaintextDataInGroupRequest:(id)arg1 error:(id *)arg2;
- (void)encryptGroupRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)fetchJidsNeedingSenderKeysForGroupChatSession:(id)arg1;
- (id)fetchJidsNeedingSenderKeysForGroupJid:(id)arg1;
- (id)fetchJidsNeedingSenderKeysForGroup:(id)arg1 activeMembers:(id)arg2 currentPhash:(id)arg3;
- (void)saveCurrentBaseKeyForMessageStanza:(id)arg1 chatJid:(id)arg2 participant:(id)arg3;
- (void)saveCurrentBaseKeyForLocationParticipant:(id)arg1;
- (void)saveCurrentBaseKeyForMessageID:(id)arg1 participant:(id)arg2;
- (void)processRetryReceiptForMessageStanzaID:(id)arg1 chatJid:(id)arg2 participant:(id)arg3 withRecipientRegistrationId:(id)arg4 atRetryCount:(unsigned char)arg5;
- (void)processLocationRetryForParticipant:(id)arg1 withRecipientRegistrationId:(id)arg2 atRetryCount:(unsigned char)arg3;
- (void)processRetryReceiptForMessageId:(id)arg1 participant:(id)arg2 withRecipientRegistrationId:(id)arg3 atRetryCount:(unsigned char)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

