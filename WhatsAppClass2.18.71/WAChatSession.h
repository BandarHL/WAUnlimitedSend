//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WAChatStorageManagedObject.h"

#import "WAContactable-Protocol.h"
#import "WAIndexableManagedObject-Protocol.h"

@class NSArray, NSDate, NSManagedObjectID, NSSet, NSString, WAChatSessionSavedReply, WAChatSessionTransaction, WAGroupInfo, WAMessage;
@protocol WAServerDate;

__attribute__((visibility("hidden")))
@interface WAChatSession : WAChatStorageManagedObject <WAContactable, WAIndexableManagedObject>
{
    WAChatSessionSavedReply *_savedReply;
    WAChatSessionTransaction *_transaction;
    _Bool _suppressCreationOfNextGroupPictureChangeEvent;
}

+ (id)earliestPinnedMessageDate;
+ (id)commaSeparatedListOfContactNames:(id)arg1 limit:(unsigned long long)arg2;
+ (id)listOfContactNamesForContacts:(id)arg1 prioritizingContactsWithJIDs:(id)arg2 unsorted:(_Bool)arg3 verifiedBadgePlaceholder:(id)arg4;
+ (id)firstNamesOfContactsInTheList:(id)arg1 limit:(unsigned long long)arg2 unsorted:(_Bool)arg3;
+ (id)firstNamesOfContactsInTheList:(id)arg1 limit:(unsigned long long)arg2;
+ (id)participantsHashForJIDs:(id)arg1;
+ (short)sessionTypeFromJID:(id)arg1;
+ (id)labelForSaveToCameraRollSetting:(int)arg1 preferCompactText:(_Bool)arg2;
+ (unsigned long long)maximumListNameLength;
+ (void)resetGroupCreatorOrAdminKnownCache;
+ (id)groupCreatorOrAdminKnownCache;
+ (id)predicateForAffectingChatBarUnreadCount;
+ (id)managedObjectContextForJID:(id)arg1;
@property(nonatomic) _Bool suppressCreationOfNextGroupPictureChangeEvent; // @synthesize suppressCreationOfNextGroupPictureChangeEvent=_suppressCreationOfNextGroupPictureChangeEvent;
- (void).cxx_destruct;
- (_Bool)validateWebClientPinDate:(id)arg1 defaultValue:(_Bool)arg2;
@property(retain, nonatomic) NSDate *webClientPinDate;
- (id)storedWebClientPinDate;
- (long long)getLastMessageYear;
- (int)getPinnedYears;
- (id)realLastMessageDate;
- (long long)isPinned;
- (void)unpin;
- (void)pinToPosition:(unsigned long long)arg1;
- (void)updateStatusRanking;
- (id)firstNamesOfActiveGroupMembersPrioritizingJIDs:(id)arg1 verifiedBadgePlaceholder:(id)arg2;
- (id)firstNamesOfActiveGroupMembers;
- (unsigned long long)numberOfActiveGroupMembers;
@property(readonly, nonatomic) NSSet *activeGroupMemberJIDs;
@property(readonly, nonatomic) NSSet *activeGroupMembers;
- (void)setSaveToCameraRollSetting:(int)arg1 allowExternalSideEffects:(_Bool)arg2;
@property(readonly, nonatomic) int saveToCameraRollSetting;
@property(readonly, nonatomic) _Bool shouldAutoSaveMediaToCameraRoll;
- (_Bool)hasLastMessageSameIdentityAsMessageID:(id)arg1;
@property(readonly, nonatomic) WAMessage *lastMessageForChatList;
@property(readonly, nonatomic) _Bool requiresFetchForChatListLastMessage;
@property(copy, nonatomic) NSString *savedInput; // @dynamic savedInput;
@property(readonly, copy, nonatomic) NSString *participantsHash;
@property(readonly, nonatomic) _Bool hasParticipantsHash;
- (id)internalDisplayNameOrDefault:(_Bool)arg1;
@property(readonly, nonatomic) NSString *displayName;
@property(readonly, copy, nonatomic) NSString *displayNameOrDefault;
@property(readonly, copy, nonatomic) NSString *subjectTextOrDefault;
- (void)setSubjectTextWithoutExternalSideEffects:(id)arg1;
@property(readonly, copy, nonatomic) NSString *subjectText;
- (void)setContactNameWithoutExternalSideEffects:(id)arg1;
@property(readonly, copy, nonatomic) NSString *contactName;
@property(readonly, nonatomic) _Bool usesSubjectText;
@property(nonatomic) int messageCounter; // @dynamic messageCounter;
- (void)setContactJID:(id)arg1 allowExternalSideEffects:(_Bool)arg2;
@property(readonly, nonatomic, getter=isUnknownContact) _Bool unknownContact;
@property(readonly, nonatomic) unsigned long long maxParticipants;
@property(readonly, nonatomic) _Bool currentUserCanMessageChat;
@property(readonly, nonatomic) _Bool readonlyAnnouncementOnlyGroup;
@property(readonly, nonatomic) _Bool currentUserCanEditGroup;
@property(readonly, nonatomic) _Bool currentUserIsAdmin;
- (id)groupMemberWithJID:(id)arg1;
@property(readonly, nonatomic, getter=isReadonlyGroup) _Bool readonlyGroup;
@property(readonly, nonatomic, getter=isOutgoingStatusChat) _Bool outgoingStatusChat;
@property(readonly, nonatomic, getter=isBroadcastList) _Bool broadcastList;
@property(readonly, nonatomic, getter=isGroupChat) _Bool groupChat;
@property(readonly, nonatomic, getter=isIncomingStatusChat) _Bool incomingStatusChat;
@property(readonly, nonatomic, getter=isIndividualChat) _Bool individualChat;
@property(readonly, nonatomic, getter=isContactBlocked) _Bool contactBlocked;
@property(readonly, nonatomic, getter=isBusinessChat) _Bool businessChat;
@property(nonatomic) _Bool vCardMatchDeclined;
@property(nonatomic, getter=isEligibleForGhostMessageUpdate) _Bool eligibleForGhostMessageUpdate;
- (void)setLocationSharingEndDate:(id)arg1 allowExternalSideEffects:(_Bool)arg2;
- (_Bool)testFlagBit:(int)arg1;
- (void)clearFlagBit:(int)arg1;
- (void)setFlagBit:(int)arg1;
- (void)updatePrimitiveLastMessageDate:(id)arg1;
@property(retain, nonatomic) NSDate<WAServerDate> *lastMessageDate; // @dynamic lastMessageDate;
@property(nonatomic) _Bool archived; // @dynamic archived;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (void)didTurnIntoFault;
- (void)promptToChangeSaveToCameraRollSettingFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateSortIndexOfMessage:(id)arg1;
- (void)prepareGroupInfo;
- (void)deleteInterruptedPTTRecordingIfNeeded;
- (void)showEmptyChatHistoryAlertViewFromViewController:(id)arg1;
- (void)resetLastMessage;
- (void)generateNewWebModifyTag;
@property(readonly, nonatomic) NSString *webModifyTag;
@property(readonly, nonatomic) NSString *nameForWebClient;
- (id)sortedGroupMembersIncludingNonActive:(_Bool)arg1;
@property(readonly, nonatomic, getter=isBroadcastListJIDValid) _Bool broadcastListJIDValid;
- (void)promptUserToAttachMediaToChatHistoryFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)deleteConfirmationText;
- (unsigned long long)countOfPendingMessages;
- (_Bool)isChatReadable;
- (_Bool)isGroupCreatorOrAdminKnown;
@property(readonly, nonatomic, getter=isSuspicious) _Bool suspicious;
@property(copy, nonatomic) WAChatSessionSavedReply *savedReply;
- (void)updateStatusParticipants;
- (id)queryPendingStatusMessageCounts;
- (unsigned long long)queryCompletedStatusMessageCount;
@property(readonly, nonatomic) unsigned long long statusMessageCount;
- (void)invalidateStatusMessageCount;
- (id)statusBeforeSort:(int)arg1 fetchLimit:(unsigned long long)arg2 hasMore:(_Bool *)arg3 mostRecent:(_Bool)arg4;
- (id)oldestStatusBeforeSort:(int)arg1 fetchLimit:(unsigned long long)arg2 hasMore:(_Bool *)arg3;
- (id)newestStatusBeforeSort:(int)arg1 fetchLimit:(unsigned long long)arg2 hasMore:(_Bool *)arg3;
- (id)statusPredicateByAdding:(id)arg1;
- (id)statusPredicateByAdding:(id)arg1 deletionTypes:(id)arg2;
- (id)statusFilterForDeletionType:(short)arg1;
@property(readonly, nonatomic) short completedDeletionType;
@property(readonly, nonatomic) short pendingDeletionType;
- (id)historicalParticipantsForParticipantsHash:(id)arg1;
- (id)messagesWithMessageIDs:(id)arg1;
- (long long)countOfMessagesAfterSort:(int)arg1 limit:(long long)arg2;
- (long long)countOfEligibleForUnreadMessagesAfterSort:(int)arg1;
- (int)validSortBeforeSort:(int)arg1 offset:(long long)arg2;
- (int)earliestUnreadSortWithOffset:(long long)arg1;
@property(readonly, nonatomic) int earliestUnreadSort;
@property(readonly, nonatomic) int mostRecentReadSort;
- (unsigned long long)numberOfStarredMessagesWithLimit:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool hasStarredMessages;
@property(readonly, nonatomic) unsigned long long numberOfStarredMessages;
- (_Bool)containsDownloadedMedia;
@property(readonly, copy, nonatomic) NSArray *pendingGhostMessages;
@property(readonly, copy, nonatomic) NSArray *ghostMessages;
- (_Bool)containsOutgoingMessages;
- (_Bool)containsUserMessages;
@property(readonly, copy, nonatomic) NSString *activityChangesJID;
@property(readonly, nonatomic) _Bool affectsChatBarUnreadCount;
- (id)basePredicateForMessagesByAdding:(id)arg1;
@property(readonly, nonatomic) WAChatSessionTransaction *transaction;
@property(readonly, nonatomic, getter=isActive) _Bool active;
@property(readonly, copy, nonatomic) NSString *paymentDefaultReceiverJID;
- (_Bool)isEnabledForPayments;
- (id)predicateForLastIncomingUserMessage;
- (id)secondLastIncomingMessagesForSMBGreetingMessage;
- (id)lastIncomingMessagesForSpamReporting;
- (id)messageWithStanzaID:(id)arg1 isFromMe:(_Bool)arg2;
- (id)messageWithStanzaID:(id)arg1 author:(id)arg2;
- (id)messageWithStanzaID:(id)arg1 participant:(id)arg2 isFromMe:(_Bool)arg3;
- (id)messagesWithStanzaID:(id)arg1;

// Remaining properties
@property(nonatomic) int contactABID; // @dynamic contactABID;
@property(copy, nonatomic) NSString *contactIdentifier; // @dynamic contactIdentifier;
@property(copy, nonatomic) NSString *contactJID; // @dynamic contactJID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy, nonatomic) NSString *eTag; // @dynamic eTag;
@property(nonatomic) int flags; // @dynamic flags;
@property(retain, nonatomic) WAGroupInfo *groupInfo; // @dynamic groupInfo;
@property(copy, nonatomic) NSSet *groupMembers; // @dynamic groupMembers;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidden; // @dynamic hidden;
@property(nonatomic) int identityVerificationEpoch; // @dynamic identityVerificationEpoch;
@property(nonatomic) short identityVerificationState; // @dynamic identityVerificationState;
@property(retain, nonatomic) WAMessage *lastMessage; // @dynamic lastMessage;
@property(retain, nonatomic) NSDate<WAServerDate> *locationSharingEndDate; // @dynamic locationSharingEndDate;
@property(readonly, nonatomic) NSManagedObjectID *objectID;
@property(copy, nonatomic) NSString *partnerName; // @dynamic partnerName;
@property(nonatomic) _Bool removed; // @dynamic removed;
@property(nonatomic) short sessionType; // @dynamic sessionType;
@property(nonatomic) short spotlightStatus; // @dynamic spotlightStatus;
@property(readonly) Class superclass;
@property(nonatomic) int unreadCount; // @dynamic unreadCount;

@end

