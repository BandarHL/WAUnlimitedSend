//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSError, NSString, WAMMSBaseTask, WAMMSBaseTaskResumePolicy, WAMMSMediaExistCheckExistingAsset, WAMMSMediaExistCheckUploadOperationMetrics, WAMMSMediaExistCheckUploadOperationRequest, WAMMSTaskDescription, WAMMSTaskSession, WamEventMediaUpload, WamEventMediaUpload2;
@protocol OS_dispatch_queue, WAMMSMediaExistCheckUploadOperationDelegate;

__attribute__((visibility("hidden")))
@interface WAMMSMediaExistCheckUploadOperation : NSObject
{
    WAMMSMediaExistCheckUploadOperationRequest *_request;
    unsigned long long _type;
    WAMMSMediaExistCheckExistingAsset *_existingAsset;
    unsigned long long _currentRetryCount;
    WAMMSTaskSession *_taskSession;
    id <WAMMSMediaExistCheckUploadOperationDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    WAMMSBaseTask *_currentTask;
    NSError *_error;
    _Bool _isTerminalError;
    WAMMSTaskDescription *_commonMMSTaskDescription;
    // Error parsing type: AI, name: _currentPhase
    unsigned long long _result;
    NSString *_downloadURL;
    NSString *_directPath;
    _Bool _attemptedChatdResumeCheck;
    _Bool _skippedUpload;
    WAMMSBaseTaskResumePolicy *_resumePolicyToUse;
    double _startTime;
    WAMMSMediaExistCheckUploadOperationMetrics *_metrics;
    WamEventMediaUpload *_uploadEvent;
    WamEventMediaUpload2 *_uploadEvent2;
    NSError *_uploadError;
}

+ (id)uploadEventWithType2:(unsigned long long)arg1 request:(id)arg2;
@property(retain) NSError *uploadError; // @synthesize uploadError=_uploadError;
- (void).cxx_destruct;
- (unsigned long long)type;
- (unsigned long long)currentRetryCount;
- (id)uploadEvent2;
- (id)metrics;
- (void)setAndRunCompletionPhaseWithError:(id)arg1 httpResponse:(id)arg2;
- (void)performCompletionPhase;
- (void)performExistCheckPhase;
- (void)performPreflightPhase;
- (void)runPhase;
@property unsigned long long currentPhase;
@property(readonly) WAMMSMediaExistCheckUploadOperationRequest *request;
- (void)cancel;
- (void)resume;
- (id)initWithRequest:(id)arg1 mmsSession:(id)arg2 queue:(id)arg3 type:(unsigned long long)arg4 delegate:(id)arg5;
- (id)initWithRequest:(id)arg1 mmsSession:(id)arg2 queue:(id)arg3 delegate:(id)arg4;
- (void)fieldstatCommonDebugFieldsForFailedEvent:(id)arg1 result:(id)arg2 error:(id)arg3;
- (void)fieldstatCompletionFieldsForEvent:(id)arg1 uploadEventResult:(long long)arg2;
- (void)fieldstatCompletionPhaseWithError2:(id)arg1;
- (void)fieldstatCommonResumeCheckFieldsForEvent:(id)arg1 result:(id)arg2;
- (void)fieldstatResumeCheckPhaseSuccessWithResult2:(id)arg1;
- (void)fieldstatResumeCheckPhaseFailureWithResult2:(id)arg1 error:(id)arg2;
- (id)createResumeCheckPhaseRetryEventWithResult2:(id)arg1 uploadEventResult:(long long)arg2 error:(id)arg3;
- (void)fieldstatPreflightPhaseWithMediaType:(unsigned long long)arg1;

@end

