//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSData, NSOutputStream, NSString, WAPttPlayer;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CC_SHA256state_st {
    unsigned int count[2];
    unsigned int hash[8];
    unsigned int wbuf[16];
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGDataProvider;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CPU {
    double intercept;
    double slope;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct Network {
    double mWhPerTxSecond;
    double mWhPerTailSecond;
};

struct OggOpusFile;

struct OpusEncoder;

struct POPAnimatorItem;

struct PowerModelConfig {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> deviceType;
    double baseline;
    struct Network network;
    struct CPU cpuHighFreq;
    struct CPU cpuLowFreq;
};

struct PowerSnapshot {
    double networkEnergy;
    double cpuEnergy;
    double totalEnergy;
    int nwakeups;
    int nErrors;
    unsigned short nTxSeconds;
    unsigned short nTailSeconds;
};

struct ProcessPMCpuStat;

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct WA2Tuple {
    Class _field1;
};

struct WACallOverlayAnchorsWithOffset {
    long long anchors;
    struct CGSize offset;
};

struct WACluster {
    Class _field1;
};

struct WAFrameAnchors {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct WAGroupInfoUIStates {
    _Bool readonlyGroup;
    _Bool groupAdmin;
    _Bool editableGroup;
};

struct WAOffScreen {
    long long direction;
    _Bool isOffScreen;
};

struct WAPBHighlyStructuredMessagePack {
    Class _field1;
};

struct WAPBHighlyStructuredMessagePack_HighlyStructuredMessageTranslation {
    Class _field1;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _WAColorSwatch {
    unsigned int _field1;
    long long _field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct _xmlXPathContext {
    struct _xmlDoc *_field1;
    struct _xmlNode *_field2;
    int _field3;
    int _field4;
    struct _xmlHashTable *_field5;
    int _field6;
    int _field7;
    struct _xmlXPathType *_field8;
    int _field9;
    int _field10;
    struct _xmlHashTable *_field11;
    int _field12;
    int _field13;
    struct _xmlXPathAxis *_field14;
    struct _xmlNs **_field15;
    int _field16;
    void *_field17;
    int _field18;
    int _field19;
    int _field20;
    struct _xmlNode *_field21;
    struct _xmlNode *_field22;
    struct _xmlHashTable *_field23;
    CDUnknownFunctionPointerType _field24;
    void *_field25;
    void *_field26;
    char *_field27;
    char *_field28;
    CDUnknownFunctionPointerType _field29;
    void *_field30;
    struct _xmlNs **_field31;
    int _field32;
    void *_field33;
    CDUnknownFunctionPointerType _field34;
    struct _xmlError {
        int _field1;
        int _field2;
        char *_field3;
        int _field4;
        char *_field5;
        int _field6;
        char *_field7;
        char *_field8;
        char *_field9;
        int _field10;
        int _field11;
        void *_field12;
        void *_field13;
    } _field35;
    struct _xmlNode *_field36;
    struct _xmlDict *_field37;
    int _field38;
    void *_field39;
};

struct _xmlXPathObject {
    int _field1;
    struct _xmlNodeSet *_field2;
    int _field3;
    double _field4;
    char *_field5;
    void *_field6;
    int _field7;
    void *_field8;
    int _field9;
};

struct amrNBInfo {
    struct __sFILE *file;
    int length;
    int currentPosition;
    void *amrNBDecoder;
    _Bool reachedEof;
    unsigned short numAqBuffersDisposed;
    WAPttPlayer *pttPlayer;
};

struct amrWBInfo {
    struct __sFILE *file;
    int length;
    int currentPosition;
    void *amrWBDecoder;
    _Bool reachedEof;
    unsigned short numAqBuffersDisposed;
    WAPttPlayer *pttPlayer;
};

struct audio_rc_params {
    struct {
        struct rc_cond_range _field1;
        struct rc_cond_range _field2;
        struct rc_cond_range _field3;
        struct rc_cond_range _field4;
        struct rc_cond_range _field5;
        struct rc_cond_range _field6;
        struct rc_cond_range _field7;
        struct rc_cond_range _field8;
        struct rc_cond_range _field9;
        char _field10;
        char _field11;
        int _field12;
        int _field13;
        int _field14;
        int _field15;
        int _field16;
        int _field17;
        int _field18;
        struct cond_param_for_cong _field19;
    } _field1;
    char _field2;
    int _field3;
    char _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    char _field9;
    char _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    char _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    float _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    int _field45;
    int _field46;
    int _field47;
    float _field48;
    int _field49;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    CDStruct_37e83fe0 ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct cond_param_for_cong {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
};

struct gl_buffers;

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct ios_factory;

struct ios_stream {
    struct pjmedia_vid_dev_stream _field1;
    struct pjmedia_vid_dev_param _field2;
    struct pj_pool_t *_field3;
    struct ios_factory *_field4;
    struct pjmedia_vid_dev_cb _field5;
    void *_field6;
    struct pjmedia_rect_size _field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    id _field11;
    void *_field12;
    void *_field13;
    struct pjmedia_vid_dev_conv _field14;
    struct pjmedia_rect_size _field15;
    id _field16;
    id _field17;
    void *_field18;
    unsigned long long _field19;
    struct CGDataProvider *_field20;
    id _field21;
    union pj_timestamp _field22;
    unsigned int _field23;
    int _field24;
    int _field25;
};

struct iosgl_stream {
    struct pjmedia_vid_dev_stream _field1;
    struct pjmedia_vid_dev_param _field2;
    struct pj_pool_t *_field3;
    struct pjmedia_vid_dev_cb _field4;
    void *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    union pj_timestamp _field10;
    unsigned int _field11;
    struct pjmedia_rect_size _field12;
    struct pjmedia_frame _field13;
    struct gl_buffers *_field14;
    id _field15;
    id _field16;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct opusEncodingInfo {
    struct __sFILE *file;
    long long currentPosition;
    long long recordTime;
    struct OpusEncoder *opusEncoder;
    struct {
        char *body_data;
        long long body_storage;
        long long body_fill;
        long long body_returned;
        int *lacing_vals;
        long long *granule_vals;
        long long lacing_storage;
        long long lacing_fill;
        long long lacing_packet;
        long long lacing_returned;
        unsigned char header[282];
        int header_fill;
        int e_o_s;
        int b_o_s;
        long long serialno;
        long long pageno;
        long long packetno;
        long long granulepos;
    } ogg_stream_state;
    short pcmBuffer[320];
    int pcmBufferCount;
    _Bool processAqBuffers;
    struct _opaque_pthread_mutex_t opusInfoMutex;
};

struct opusInfo {
    struct OggOpusFile *file;
    long long length;
    long long currentPosition;
    _Bool reachedEof;
    unsigned short numAqBuffersDisposed;
    WAPttPlayer *pttPlayer;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pj_addr_hdr {
    unsigned char _field1;
    unsigned char _field2;
};

struct pj_in_addr {
    unsigned int _field1;
};

struct pj_math_stat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    float _field6;
    double _field7;
    void *_field8;
    union pj_timestamp _field9;
};

struct pj_pool_t;

struct pj_sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct pj_in_addr _field4;
    char _field5[8];
};

struct pj_sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    union pj_in6_addr _field5;
    unsigned int _field6;
};

struct pj_time_val {
    long long _field1;
    long long _field2;
};

struct pjmedia_audio_format_detail {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct pjmedia_converter;

struct pjmedia_coord {
    float _field1;
    float _field2;
};

struct pjmedia_format {
    unsigned int _field1;
    int _field2;
    int _field3;
    union {
        struct pjmedia_audio_format_detail _field1;
        struct pjmedia_video_format_detail _field2;
        char _field3[1];
    } _field4;
};

struct pjmedia_frame {
    int _field1;
    unsigned int _field2;
    void *_field3;
    unsigned long long _field4;
    union pj_timestamp _field5;
    unsigned int _field6;
    struct video_codec_data _field7;
    int _field8;
    unsigned char _field9;
};

struct pjmedia_ratio {
    int _field1;
    int _field2;
};

struct pjmedia_rect_size {
    unsigned int _field1;
    unsigned int _field2;
};

struct pjmedia_rtcp_session_combined_send_stat {
    struct pjmedia_rtcp_stream_common_pkt_stat _field1;
    struct pjmedia_rtcp_stream_common_ctrl_stat _field2;
};

struct pjmedia_rtcp_session_recv_stat {
    struct pjmedia_rtcp_stream_common_pkt_stat _field1;
    struct pjmedia_rtcp_stream_common_ctrl_stat _field2;
    struct pjmedia_rtcp_stream_recv_stat _field3;
    unsigned int _field4;
    struct pjmedia_rtcp_stream_nack_stat _field5;
};

struct pjmedia_rtcp_session_stat {
    struct pj_time_val _field1;
    union pj_timestamp _field2;
    struct wa_math_stat _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned int _field12;
    unsigned int _field13;
    union pj_timestamp _field14;
    union pj_timestamp _field15;
    struct pjmedia_rtcp_stream_nack_stat _field16;
    struct pjmedia_rtcp_stream_recv_stat _field17;
    struct pjmedia_rtcp_stream_recv_stat _field18;
};

struct pjmedia_rtcp_stat {
    struct pjmedia_rtcp_session_stat _field1;
    struct pjmedia_rtcp_session_combined_send_stat _field2;
    struct pjmedia_rtcp_session_recv_stat _field3;
};

struct pjmedia_rtcp_stream_common_ctrl_stat {
    struct pj_time_val _field1;
    union pj_timestamp _field2;
    unsigned int _field3;
    unsigned int _field4;
    union pj_timestamp _field5;
    unsigned int _field6;
    union pj_timestamp _field7;
    unsigned int _field8;
};

struct pjmedia_rtcp_stream_common_pkt_stat {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct pjmedia_rtcp_stream_nack_stat {
    unsigned int _field1;
    union pj_timestamp _field2;
    unsigned short _field3[34];
    unsigned long long _field4;
};

struct pjmedia_rtcp_stream_recv_stat {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct wa_math_stat _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct {
        unsigned int :1;
        unsigned int :1;
    } _field9;
    struct wa_math_stat _field10;
    struct wa_math_stat _field11;
};

struct pjmedia_vid_dev_cb {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct pjmedia_vid_dev_conv {
    struct pjmedia_converter *_field1;
    struct pjmedia_format _field2;
    struct pjmedia_rect_size _field3;
    struct pjmedia_rect_size _field4;
    struct pjmedia_rect_size _field5;
    int _field6;
    struct pjmedia_rect_size _field7;
    void *_field8;
    unsigned long long _field9;
    unsigned long long _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    unsigned long long _field16;
};

struct pjmedia_vid_dev_factory_param {
    int _field1;
};

struct pjmedia_vid_dev_hwnd {
    int _field1;
    union {
        CDStruct_7a6dc4e9 _field1;
        struct {
            void *_field1;
            void *_field2;
        } _field2;
        CDStruct_7a6dc4e9 _field3;
        CDStruct_7a6dc4e9 _field4;
        CDStruct_7a6dc4e9 _field5;
        struct {
            CDUnknownFunctionPointerType _field1;
            CDUnknownFunctionPointerType _field2;
            void *_field3;
        } _field6;
        void *_field7;
    } _field2;
};

struct pjmedia_vid_dev_param {
    int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct pjmedia_format _field6;
    struct pjmedia_vid_dev_hwnd _field7;
    struct pjmedia_window_size _field8;
    struct pjmedia_coord _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    unsigned int _field14;
    int _field15;
    struct pjmedia_vid_dev_factory_param _field16;
};

struct pjmedia_vid_dev_stream {
    struct {
        unsigned int _field1;
        int _field2;
    } _field1;
    struct pjmedia_vid_dev_stream_op *_field2;
};

struct pjmedia_vid_dev_stream_op;

struct pjmedia_video_format_detail {
    struct pjmedia_rect_size _field1;
    struct pjmedia_ratio _field2;
    short _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct pjmedia_ratio _field8;
    int _field9;
    int _field10;
};

struct pjmedia_window_size {
    float _field1;
    float _field2;
};

struct rc_cond_range {
    int _field1;
    int _field2;
};

struct rc_cond_range_float {
    float _field1;
    float _field2;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct signal_protocol_address {
    char *_field1;
    unsigned long long _field2;
    int _field3;
};

struct signal_protocol_sender_key_name {
    char *_field1;
    unsigned long long _field2;
    struct signal_protocol_address _field3;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct sqlite3_tokenizer_module {
    int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> __d_;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct traffic_shaper_params {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    int _field9;
    unsigned int _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
};

struct unique_ptr<FB::PowerMetrics::ProcessPMCpuStat, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat>> {
    struct __compressed_pair<FB::PowerMetrics::ProcessPMCpuStat *, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat>> {
        struct ProcessPMCpuStat *__value_;
    } __ptr_;
};

struct vImage_Buffer {
    void *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct video_codec_data {
    int _field1;
    union {
        struct {
            int _field1;
            int _field2;
            int _field3;
            int _field4;
            int _field5;
        } _field1;
        struct {
            int _field1;
            int _field2;
            unsigned char _field3;
            int _field4;
            int _field5;
            unsigned char _field6;
            unsigned short _field7;
            unsigned long long _field8;
        } _field2;
    } _field2;
};

struct video_rc_params {
    struct {
        struct rc_cond_range _field1;
        struct rc_cond_range _field2;
        struct rc_cond_range _field3;
        struct rc_cond_range _field4;
        struct rc_cond_range _field5;
        struct rc_cond_range _field6;
        struct rc_cond_range _field7;
        struct rc_cond_range _field8;
        struct rc_cond_range _field9;
        struct rc_cond_range _field10;
        struct rc_cond_range _field11;
        struct rc_cond_range _field12;
        struct rc_cond_range _field13;
        struct rc_cond_range _field14;
        struct rc_cond_range _field15;
        struct rc_cond_range _field16;
        struct rc_cond_range _field17;
        struct rc_cond_range _field18;
        struct rc_cond_range _field19;
        struct rc_cond_range _field20;
        struct rc_cond_range _field21;
        struct rc_cond_range _field22;
        struct rc_cond_range_float _field23;
        struct rc_cond_range _field24;
        char _field25;
        char _field26;
        int _field27;
        int _field28;
        int _field29;
        int _field30;
        int _field31;
        int _field32;
        int _field33;
        int _field34;
        int _field35;
        int _field36;
        int _field37;
        struct cond_param_for_cong _field38;
        float _field39;
        float _field40;
        float _field41;
        float _field42;
    } _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    unsigned int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    float _field27;
    float _field28;
    float _field29;
    int _field30;
    int _field31;
    float _field32;
    int _field33;
    struct {
        float _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        int _field9;
        int _field10;
        int _field11;
        int _field12;
        int _field13;
        int _field14;
        int _field15;
        int _field16;
        int _field17;
        int _field18;
        char _field19;
        int _field20;
        int _field21;
        int _field22;
        int _field23;
        int _field24;
        float _field25;
        float _field26;
        float _field27;
        float _field28;
        float _field29;
        int _field30;
        int _field31;
        int _field32;
        int _field33;
        int _field34;
        float _field35;
        int _field36;
    } _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    float _field41;
    int _field42;
    int _field43;
    float _field44;
    char _field45;
    int _field46;
    int _field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    float _field52;
    float _field53;
    float _field54;
    float _field55;
    float _field56;
    int _field57;
    int _field58;
    float _field59;
    int _field60;
    int _field61;
    int _field62;
    float _field63;
    float _field64;
    int _field65;
    int _field66;
    int _field67;
    int _field68;
    int _field69;
    float _field70;
    int _field71;
    int _field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    int _field77;
    int _field78;
    int _field79;
    int _field80;
    int _field81;
    int _field82;
    int _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    float _field88;
    float _field89;
    float _field90;
    int _field91;
    int _field92;
    int _field93;
    int _field94;
    float _field95;
    int _field96;
    float _field97;
    float _field98;
    int _field99;
    int _field100;
    int _field101;
    int _field102;
    int _field103;
    int _field104;
    int _field105;
    int _field106;
    int _field107;
    int _field108;
    float _field109;
    int _field110;
    int _field111;
    float _field112;
    int _field113;
    int _field114;
    int _field115;
    int _field116;
    int _field117;
    int _field118;
    int _field119;
    int _field120;
    int _field121;
    int _field122;
    int _field123;
    int _field124;
    int _field125;
    float _field126;
    float _field127;
    int _field128;
    int _field129;
    int _field130;
    int _field131;
    int _field132;
    int _field133;
    int _field134;
    int _field135;
    int _field136;
    int _field137;
    int _field138;
    int _field139;
    int _field140;
    int _field141;
    int _field142;
    int _field143;
    int _field144;
    float _field145;
    int _field146;
};

struct wa_call_group_info_t {
    int _field1;
    int _field2;
    int _field3;
    struct wa_call_participant_info_t _field4[7];
    int _field5;
};

struct wa_call_info_t {
    int _field1;
    char _field2[64];
    char _field3[80];
    char _field4[80];
    int _field5;
    struct pj_time_val _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    unsigned int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct wa_call_participant_detail_info_t _field27[4];
    int _field28;
    CDStruct_e8c647be _field29[1];
    int _field30;
    CDStruct_e8c647be _field31[1];
    int _field32;
    int _field33;
    int _field34;
};

struct wa_call_participant_detail_info_t {
    char _field1[80];
    int _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    unsigned int _field11;
    unsigned int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    unsigned int _field20;
};

struct wa_call_participant_info_t {
    char _field1[80];
    int _field2;
    char _field3[128];
    struct wa_call_voip_capability_t _field4;
};

struct wa_call_ratecontrol_params_t {
    struct {
        struct video_rc_params _field1;
        struct video_rc_params _field2[32];
        unsigned char _field3;
        struct video_rc_params _field4;
        struct {
            float _field1;
            float _field2;
            int _field3;
            int _field4;
            int _field5;
        } _field5[32];
        unsigned char _field6;
    } _field1;
    struct {
        struct audio_rc_params _field1;
        struct audio_rc_params _field2[32];
        unsigned char _field3;
        struct audio_rc_params _field4;
    } _field2;
};

struct wa_call_relay {
    struct wa_call_relay_list _field1;
    struct wa_call_relay_token_list _field2;
    int _field3;
};

struct wa_call_relay_addr {
    unsigned int _field1;
    unsigned char _field2[16];
    unsigned short _field3;
    unsigned short _field4;
};

struct wa_call_relay_list {
    unsigned char _field1;
    struct wa_call_relay_addr _field2[8];
};

struct wa_call_relay_token {
    unsigned char _field1[256];
    int _field2;
};

struct wa_call_relay_token_list {
    unsigned char _field1;
    struct wa_call_relay_token _field2[8];
};

struct wa_call_vid_static_t {
    int _field1;
    int _field2;
};

struct wa_call_voip_capability_t {
    int _field1;
    int _field2;
    unsigned char _field3[64];
};

struct wa_call_voip_params_t {
    struct {
        int _field1;
        int _field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned int _field5;
        unsigned int _field6;
        unsigned int _field7;
        int _field8;
        int _field9;
        int _field10;
        unsigned char _field11;
        int _field12;
        unsigned char _field13;
        int _field14;
        int _field15;
        int _field16;
        int _field17;
        unsigned char _field18;
        unsigned char _field19;
        int _field20;
    } _field1;
    struct {
        int _field1;
        unsigned char _field2;
        unsigned char _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned int _field6;
    } _field2;
    struct {
        int _field1;
        int _field2;
        unsigned char _field3;
    } _field3;
    CDStruct_37e83fe0 _field4;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned char _field3;
        unsigned short _field4;
        unsigned char _field5;
        int _field6;
        unsigned short _field7;
        int _field8;
        int _field9;
        unsigned int _field10;
        unsigned int _field11;
        unsigned int _field12;
        unsigned char _field13;
    } _field5;
    struct {
        int _field1;
        unsigned char _field2;
        int _field3;
        int _field4;
    } _field6;
    int _field7;
    struct wa_call_ratecontrol_params_t _field8;
    struct wa_call_vid_static_t _field9;
    struct {
        struct {
            int _field1;
            int _field2;
            int _field3;
            int _field4;
            unsigned char _field5;
            unsigned char _field6;
            int _field7;
            int _field8;
            int _field9;
            int _field10;
            int _field11;
        } _field1;
        struct {
            unsigned int _field1;
            unsigned int _field2;
            unsigned int _field3;
            unsigned int _field4;
            float _field5;
            float _field6;
        } _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
    } _field10;
    struct {
        float _field1;
        unsigned char _field2;
        unsigned char _field3;
        unsigned char _field4;
        int _field5;
        int _field6;
    } _field11;
    struct {
        int _field1;
        int _field2;
        int _field3;
        unsigned int _field4;
        unsigned int _field5;
        unsigned int _field6;
        int _field7;
        unsigned int _field8;
        int _field9;
        unsigned char _field10;
        int _field11;
        unsigned int _field12;
        int _field13;
        unsigned int _field14;
        int _field15;
    } _field12;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        int _field3;
        int _field4;
    } _field13;
    struct {
        unsigned char _field1;
        unsigned int _field2;
        unsigned int _field3;
        int _field4;
        unsigned int _field5;
        int _field6;
        unsigned int _field7;
    } _field14;
    struct traffic_shaper_params _field15;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        unsigned int _field5;
        unsigned int _field6;
        unsigned int _field7;
        int _field8;
        int _field9;
        int _field10;
        int _field11;
        int _field12;
        int _field13;
        int _field14;
    } _field16;
    struct {
        unsigned int _field1;
    } _field17;
    unsigned char _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    char _field24[1024];
    char _field25[1024];
    char _field26[1024];
    char _field27[32];
    unsigned int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    float _field37;
    int _field38;
    char *_field39;
    char *_field40;
    unsigned int _field41;
    int _field42;
    unsigned char _field43;
    int _field44;
    int _field45;
    int _field46;
    int _field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    int _field55;
    unsigned int _field56;
    unsigned int _field57;
    int _field58;
    int _field59;
    int _field60;
    int _field61;
    union pj_sockaddr _field62;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        float _field5;
        int _field6;
        int _field7;
        unsigned int _field8;
    } _field63;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        int _field3;
    } _field64;
    int _field65;
    unsigned int _field66;
    struct {
        int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned int _field5;
        unsigned int _field6;
        int _field7;
        int _field8;
        int _field9;
        int _field10;
        int _field11;
        int _field12;
        float _field13;
        int _field14;
        int _field15;
        int _field16;
        int _field17;
        int _field18;
    } _field67;
    int _field68;
    int _field69;
    int _field70;
    int _field71;
    int _field72;
    float _field73;
    int _field74;
    float _field75;
    int _field76;
    float _field77;
    float _field78;
    int _field79;
    int _field80;
    int _field81;
    int _field82;
    int _field83;
    unsigned int _field84;
    int _field85;
    int _field86;
    int _field87;
    unsigned int _field88;
    int _field89;
    int _field90;
    int _field91;
    int _field92;
    int _field93;
    int _field94;
    int _field95;
    int _field96;
    int _field97;
    unsigned int _field98;
    unsigned int _field99;
    int _field100;
};

struct wa_math_stat {
    struct pj_math_stat _field1;
    struct pj_math_stat _field2;
};

struct wam_config {
    char *_field1;
    char *_field2;
    char *_field3;
    int _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    int _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    void *_field12;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
} CDStruct_df7f102b;

typedef struct {
    _Bool hasDescriptionValue;
    _Bool hasParticipants;
} CDStruct_0714743d;

typedef struct {
    unsigned char _field1;
    char _field2[64];
    char _field3[80];
    char _field4[80];
} CDStruct_b067a95f;

typedef struct {
    unsigned char __size_;
} CDStruct_37e83fe0;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_7523a67d;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_33dcf794;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char _field1[80];
    char _field2[64];
} CDStruct_e8c647be;

typedef struct {
    unsigned int ctx[96];
} CDStruct_43cfb2c2;

typedef struct {
    void *_field1;
} CDStruct_7a6dc4e9;

typedef struct {
    double maximumWidth;
    double maximumWidthForPortraitOrientation;
    double availableHeight;
    unsigned long long position;
    long long layoutDirection;
    double layoutMargin;
    double preferredInset;
    double cornerRadius;
    long long maximumNumberOfLines;
} CDStruct_8ee84fd7;

typedef struct {
    float _field1;
} CDStruct_37a3040a;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    unsigned char _field1;
    struct {
        unsigned int _field1;
        unsigned char _field2[16];
        unsigned short _field3;
        unsigned char _field4;
        int _field5;
    } _field2[20];
} CDStruct_bc3eea8d;

typedef struct {
    int _field1;
    unsigned char _field2;
    struct {
        unsigned int _field1;
        unsigned char _field2[16];
        unsigned short _field3;
        int _field4;
    } _field3[8];
} CDStruct_35227113;

typedef struct {
    CDStruct_b067a95f _field1;
    unsigned int _field2;
    unsigned char _field3[16];
    unsigned short _field4;
    int _field5;
} CDStruct_28296d11;

typedef struct {
    CDStruct_33dcf794 _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    unsigned long long _field5;
} CDStruct_ac5c10e2;

typedef struct {
    struct {
        double x;
        double y;
    } origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGSize cropSize;
    struct CGPoint anchorPoint;
    double rotationAngle;
} CDStruct_6b9f5eac;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_26e8d939;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    union pj_timestamp ts;
    unsigned int bit_info;
    int used;
    int frame_type;
} CDStruct_f2e6053c;

typedef struct {
    char call_id[64];
    char peer_jid[80];
    char call_creator_jid[80];
    double call_side;
    double call_result;
    double call_setup_error_type;
    double call_offer_nack_error_code;
    double call_term_reason;
    double call_transition_count;
    double call_relay_bind_status;
    double call_relay_create_t;
    double call_t;
    double call_setup_t;
    double call_ringing_t;
    double call_offer_receipt_delay;
    double call_start_time;
    double call_end_time;
    double call_accept_time;
    double call_reject_time;
    double create_sound_port_time;
    char abtest_bucket[32];
    double low_data_usage_bitrate;
    double call_interrupted_count;
    double call_ended_interrupted;
    double call_min_rtt;
    double call_max_rtt;
    double call_avg_rtt;
    double call_last_rtt;
    double call_initial_rtt;
    struct {
        char relay_server_address[54];
        char ip_str[46];
        char peer_ip_str[46];
        double transport;
        double p2p_disabled;
        double network;
        double peer_network;
        double pings_sent;
        double pongs_received;
        double reflective_ports_diff;
        double end_reconnecting;
        double is_ipv6_capable;
        double tx_total_bytes;
        double rx_total_bytes;
        double tx_total_bitrate;
        double rx_total_bitrate;
        double relay_to_relay_fallback_count;
        double p2p_to_relay_fallback_count;
        double rx_stopped_t;
        double upnp_add_result_code;
        double upnp_remove_result_code;
        double is_upnp_external_ip_private;
        double is_upnp_external_ip_the_same_as_reflexive_ip;
        double symmetric_nat_port_gap;
        double xor_cipher_mode;
        double initial_estimated_tx_bitrate;
        double init_bwe_source;
        double used_init_tx_bitrate;
        double his_based_init_tx_bitrate;
        double his_info_could_be_used;
        double avg_rott_tx;
        double avg_rott_rx;
        double tp_fb_tx_bitrate;
        double tp_fb_rx_bitrate;
        double self_ipv4;
        double peer_ipv4;
    } transport;
    struct {
        double agc_mode;
        double aec_mode;
        double ns_mode;
        double sw_aec_type;
        double sw_aec_mode;
        double aec_offset;
        double aec_tail_length;
        double echo_likelihood;
        double echo_likelihood_before_ec;
        double echo_energy;
        double play_cb_avg_t;
        double record_cb_avg_t;
        double clock_cb_avg_t;
        double playback_cb_stopped;
        double record_cb_stopped;
        double record_get_frame_avg_t;
        double tx_pkt_loss_pct;
        double tx_pkt_error_pct;
        double tx_avg_bitrate;
        double tx_avg_bwe;
        double tx_min_jitter;
        double tx_max_jitter;
        double tx_avg_jitter;
        double tx_min_loss_period;
        double tx_max_loss_period;
        double tx_avg_loss_period;
        double rx_pkt_loss_pct;
        double rx_avg_bitrate;
        double rx_avg_bwe;
        double rx_min_jitter;
        double rx_max_jitter;
        double rx_avg_jitter;
        double rx_min_loss_period;
        double rx_max_loss_period;
        double rx_avg_loss_period;
        double avg_encode_ms;
        double avg_decode_ms;
        double avg_target_bitrate;
        double num_encoder_comp_stepdowns;
        double opus_version;
        double jb_lost;
        double jb_avg_delay;
        double jb_min_delay;
        double jb_max_delay;
        double jb_last_delay;
        double jb_empties;
        double jb_gets;
        double jb_puts;
        double jb_discards;
        double rc_minrtt;
        double rc_maxrtt;
        double record_silence_ratio;
        double record_max_energy_ratio;
        double record_frames_per_second;
        double playback_frames_per_second;
        double recent_record_frames_per_second;
        double recent_playback_frames_per_second;
        double restart_count;
        double restart_reason;
        double ec_restart_count;
        double sampling_rate;
        double buffer_underflow_per_second;
        double buffer_overflow_per_second;
        double buffer_frame_count;
        double echo_cancellation_ms_per_sec;
        double speaker_min_power;
        double speaker_max_power;
        double speaker_avg_power;
        double mic_min_power;
        double mic_max_power;
        double mic_avg_power;
        struct {
            double tx_total_bytes;
            double rx_total_bytes;
            double enc_frame_count;
            double enc_avg_time_ms;
            double enc_cpu_overuse_count;
            double dec_frame_count;
            double dec_frame_played;
            double dec_avg_time_ms;
        } c2;
    } audio;
    struct {
        double enabled;
        double enabled_at_call_start;
        double active_time;
        double codec_type;
        double initial_codec_type;
        double codec_sub_type;
        double tx_packets;
        double tx_resend_packets;
        double tx_rtcp_nack;
        double tx_rtcp_pli;
        double tx_total_bytes;
        double tx_bitrate;
        double tx_pkt_loss_pct;
        double tx_pkt_error_pct;
        double rx_total_bytes;
        double rx_packets;
        double rx_rtcp_nack;
        double rx_rtcp_pli;
        double rx_bitrate;
        double rx_pkt_loss_pct;
        double rx_pkt_error_pct;
        double dec_avg_fps;
        double dec_avg_bitrate;
        double dec_color_id;
        double dec_name;
        double dec_restart;
        double dec_lost_packets;
        double dec_skip_packets;
        double dec_input_frames;
        double dec_output_frames;
        double dec_error_frames;
        double dec_keyframes;
        double dec_ltrp_frames;
        double dec_latency;
        double enc_avg_fps;
        double enc_avg_target_fps;
        double enc_avg_bitrate;
        double enc_color_id;
        double enc_name;
        double enc_restart;
        double enc_discard_frame;
        double enc_input_frames;
        double enc_output_frames;
        double enc_error_frames;
        double enc_drop_frames;
        double enc_keyframes;
        double enc_ltrp_frames;
        double enc_latency;
        double tx_fec_frames;
        double rx_fec_frames;
        double fec_recovered;
        double rx_fec_bitrate;
        double tx_fec_bitrate;
        double avg_target_bitrate;
        double last_sender_bwe;
        double avg_sender_bwe;
        double rx_bwe_hit_tx_bwe;
        double max_sender_bwe;
        double sender_bwe_stddev;
        double target_bitrate_reaches_200kbps_t;
        double target_bitrate_reaches_500kbps_t;
        double target_bitrate_reaches_1000kbps_t;
        double capture_width;
        double capture_height;
        double width;
        double height;
        double render_delay_t;
        double render_freeze_t;
        double render_freeze_2x_t;
        double render_freeze_4x_t;
        double render_freeze_8x_t;
        double peer_width;
        double peer_height;
        double render_avg_fps;
        double capture_avg_fps;
        double render_frame_converter_ms;
        double capture_frame_converter_ms;
        double av_avg_delta;
        double av_max_delta;
        double decode_paused_count;
        double self_state;
        double peer_state;
        double upgrade_count;
        double downgrade_count;
        double upgrade_request_count;
        double upgrade_cancel_count;
        double upgrade_cancel_by_timeout_count;
        double upgrade_reject_count;
        double upgrade_reject_by_timeout_count;
        double camera_off_count;
        double hw_enc_avg_overshoot;
        double hw_enc_avg_undershoot;
        double hw_enc_std_overshoot;
        double hw_enc_std_undershoot;
        double hw_enc_time_overshoot;
        double hw_enc_time_undershoot;
        double enc_avg_overshoot;
        double enc_avg_undershoot;
        double enc_std_overshoot;
        double enc_std_undershoot;
        double enc_time_overshoot;
        double enc_time_undershoot;
        double enc_time_overunder_shoot_perc_times_per_encoder[2][4][3];
        double h264_time;
        double h265_time;
    } video;
    struct {
        double overflow_count;
        double queue_empty_count;
        double queued_packet_count;
        double max_delay_violations;
        double min_delay_violations;
        double avg_queue_ms;
    } traffic_shaper;
    struct {
        double tx_count_total;
        double tx_count_success;
        double rx_count_total;
        double rx_count_success;
        double avg_bitrate;
    } probe;
    struct {
        double segment_idx;
        double is_last_segment;
        double is_group_call_invitee;
        double num_connected_participants;
        double row_type;
        double total_call_t_since_call_start;
        double total_p3_call_t_since_call_start;
        double invite_count_since_call_start;
        double nack_count_since_call_start;
    } group_call;
    double test_event;
} CDStruct_777bb506;

typedef struct {
    CDStruct_b067a95f _field1;
    unsigned int _field2;
    char _field3[80];
    struct wa_call_relay _field4;
    struct wa_call_voip_params_t _field5;
    struct wa_call_group_info_t _field6;
} CDStruct_14faf619;

typedef struct {
    CDStruct_b067a95f _field1;
    unsigned int _field2;
    CDStruct_bc3eea8d _field3;
    int _field4;
    struct wa_call_relay _field5;
    int _field6;
    struct wa_call_voip_params_t _field7;
    unsigned char _field8[32];
    int _field9;
    struct {
        unsigned char _field1[256];
        int _field2;
        unsigned char _field3[256];
        int _field4;
        unsigned char _field5[32];
        int _field6;
        unsigned char _field7[32];
        int _field8;
    } _field10;
    unsigned int _field11;
    int _field12;
    int _field13;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        unsigned short _field5;
        unsigned short _field6;
    } _field14[4];
    struct wa_call_voip_capability_t _field15;
    struct wa_call_group_info_t _field16;
    int _field17;
    int _field18;
} CDStruct_02dc67ae;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_20bec4f3;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

#pragma mark Named Unions

union pj_in6_addr {
    unsigned char _field1[16];
    unsigned int _field2[4];
};

union pj_sockaddr {
    struct pj_addr_hdr _field1;
    struct pj_sockaddr_in _field2;
    struct pj_sockaddr_in6 _field3;
};

union pj_timestamp {
    struct {
        unsigned int lo;
        unsigned int hi;
    } u32;
    unsigned long long u64;
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

