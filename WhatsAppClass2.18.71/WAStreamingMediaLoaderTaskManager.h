//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WAStreamingMediaLoaderTaskDelegate-Protocol.h"

@class NSFileHandle, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSString, NSURL, WAMMSTaskDescription, WAStreamingMediaLoaderDownloadMetrics, WAStreamingMediaLoaderMessageInfo, WAStreamingMediaLoaderProgress, WAStreamingMediaLoaderTask;
@protocol OS_dispatch_queue, WAStreamingMediaLoaderTaskManagerDelegate;

__attribute__((visibility("hidden")))
@interface WAStreamingMediaLoaderTaskManager : NSObject <WAStreamingMediaLoaderTaskDelegate>
{
    NSString *_identifier;
    WAStreamingMediaLoaderMessageInfo *_messageInfo;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_tasks;
    WAMMSTaskDescription *_taskDescription;
    // Error parsing type: AI, name: _modeFlags
    _Bool _cancelled;
    NSFileHandle *_fileHandle;
    NSMutableIndexSet *_fileMap;
    unsigned long long _fileMapCounter;
    NSMutableDictionary *_metricsForIdentifier;
    WAStreamingMediaLoaderDownloadMetrics *_downloadMetrics;
    WAStreamingMediaLoaderTask *_firstPlaybackTask;
    id <WAStreamingMediaLoaderTaskManagerDelegate> _delegate;
    NSURL *_fileURL;
    double _estimatedBandwidth;
    NSString *_taskIdentifiers;
}

+ (_Bool)fileForFileMapExistsForUniqueKey:(id)arg1;
+ (id)progressForMessageInfo:(id)arg1;
+ (id)fileMapURLForUniqueKey:(id)arg1;
+ (id)fileURLForForUniqueKey:(id)arg1;
@property(copy) NSString *taskIdentifiers; // @synthesize taskIdentifiers=_taskIdentifiers;
@property(nonatomic) double estimatedBandwidth; // @synthesize estimatedBandwidth=_estimatedBandwidth;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, nonatomic) __weak id <WAStreamingMediaLoaderTaskManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)firstPlaybackMetrics;
- (void)submitEventForFirstPlayWithBufferingTime:(double)arg1;
- (void)submitFieldstatsWithResult:(int)arg1 taskIdentifier:(id)arg2 error:(id)arg3;
- (void)submitFieldstatsWithResult:(int)arg1 taskIdentifier:(id)arg2;
- (void)submitFieldstatsWithError:(id)arg1 task:(id)arg2;
- (void)trimTasksIfNeeded:(id)arg1;
- (_Bool)restartTask:(id)arg1 filterCellular:(_Bool)arg2;
- (id)intersectingRangeTaskMapForRequestRange:(struct _NSRange)arg1;
- (void)createRequestsWithType:(unsigned long long)arg1 requestedRange:(struct _NSRange)arg2 resourceLoader:(id)arg3 loadingRequest:(id)arg4;
- (void)loaderTask:(id)arg1 didCompleteWithError:(id)arg2;
- (void)loaderTask:(id)arg1 didReceiveData:(id)arg2 atOffset:(unsigned long long)arg3 isEOF:(_Bool)arg4 encBytesLength:(unsigned long long)arg5;
- (_Bool)loaderTask:(id)arg1 didReceiveResponse:(id)arg2;
- (_Bool)cellularAccessAllowedForRequestType:(unsigned long long)arg1;
- (unsigned long long)upperLimitForThumbnailOrPrefetchMode;
- (unsigned long long)upperDownloadLimitForCurrentMode;
- (void)clearModeFlags:(unsigned long long)arg1;
- (void)setModeFlags:(unsigned long long)arg1;
- (_Bool)hasAnyModeFlags:(unsigned long long)arg1;
- (unsigned long long)missingBytesFromOffset:(unsigned long long)arg1 toOffset:(unsigned long long)arg2;
- (struct _NSRange)firstMissingRangeInRange:(struct _NSRange)arg1;
- (unsigned long long)availableFromOffset:(unsigned long long)arg1 toOffset:(unsigned long long)arg2;
- (_Bool)feedDataRequest:(id)arg1 isEOF:(_Bool)arg2;
- (_Bool)fillNextGapForced:(_Bool)arg1;
- (_Bool)fillGapsWithModeFlags:(unsigned long long)arg1;
- (void)didVerifyFileSize:(unsigned long long)arg1;
- (void)didDownloadEntireFile;
@property(readonly, nonatomic) _Bool hasEntireFile;
- (void)saveFileMap;
- (void)finishIfIdle;
- (void)finish;
- (void)close;
- (_Bool)open;
@property(readonly, nonatomic) _Bool isOpen;
- (void)cancelLoadingRequest:(id)arg1 from:(id)arg2;
- (void)handleRequest:(id)arg1 from:(id)arg2 isThumbnail:(_Bool)arg3;
- (id)fetchFileMapWithMigration:(_Bool)arg1;
@property(readonly, nonatomic) WAStreamingMediaLoaderProgress *progress;
@property(readonly, nonatomic) _Bool canPrefetch;
@property(readonly, nonatomic) _Bool isIdle;
- (void)cancelTasksWithRequestTypes:(unsigned long long)arg1 loadingRequest:(id)arg2 resourceLoader:(id)arg3 alreadyFinished:(_Bool)arg4;
- (void)cancelIdleTasks;
- (void)cancelAllTasks;
- (void)updateIdentifiers;
- (void)removeTask:(id)arg1;
- (void)addTask:(id)arg1;
- (id)taskFromOffset:(unsigned long long)arg1 toOffset:(unsigned long long)arg2 allowsCellularAccess:(_Bool)arg3;
- (id)description;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 messageInfo:(id)arg2 delegate:(id)arg3 queue:(id)arg4;

@end

