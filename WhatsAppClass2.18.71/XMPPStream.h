//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "XMPPSocketDelegate-Protocol.h"

@class NSData, NSDictionary, NSMutableData, NSNumber, NSString, WAECKeyPair, WAECPublicKey, WAExecutionTimeProfiler, WANoiseHandshakeManager, WANoiseStreamCipher, WATimer, XMPPBinaryCoder, XMPPSocket;
@protocol OS_dispatch_queue, XMPPStreamDelegate;

__attribute__((visibility("hidden")))
@interface XMPPStream : NSObject <XMPPSocketDelegate>
{
    XMPPBinaryCoder *_binaryCoder;
    NSMutableData *_incomingBuffer;
    XMPPSocket *_socket;
    WAExecutionTimeProfiler *_profiler;
    double _lastSocketReadTime;
    double _systemUptimeAtLastSocketRead;
    NSDictionary *_connectionInfo;
    _Bool _isDisconnecting;
    _Bool _isAckKick;
    WATimer *_socketIdleTimer;
    WANoiseHandshakeManager *_handshakeManager;
    WANoiseStreamCipher *_streamCipher;
    WAECPublicKey *_serverStaticPublicKey;
    unsigned long long _consecutiveConnectFailures;
    double _timeoutValue;
    NSData *_debugEdgeRoutingInfoFromPush;
    _Bool _receivedOfflineElement;
    _Bool _receivedOfflineComplete;
    _Bool _xmppPassiveMode;
    _Bool _opened;
    id <XMPPStreamDelegate> _delegate;
    NSString *_xmppUser;
    WAECKeyPair *_clientStaticKeyPair;
    double _lastOfflineStanzaTime;
    NSString *_datacenter;
    unsigned long long _consecutiveNoOfflineProgressAfterConnect;
}

+ (id)serverStaticKeychainQuery;
+ (void)storeServerStatic:(id)arg1;
+ (id)savedServerStatic;
@property(readonly, nonatomic) unsigned long long consecutiveNoOfflineProgressAfterConnect; // @synthesize consecutiveNoOfflineProgressAfterConnect=_consecutiveNoOfflineProgressAfterConnect;
@property(readonly, nonatomic) unsigned long long consecutiveConnectFailures; // @synthesize consecutiveConnectFailures=_consecutiveConnectFailures;
@property(readonly, nonatomic) NSString *datacenter; // @synthesize datacenter=_datacenter;
@property(readonly, nonatomic, getter=isOpened) _Bool opened; // @synthesize opened=_opened;
@property(readonly, nonatomic) double lastOfflineStanzaTime; // @synthesize lastOfflineStanzaTime=_lastOfflineStanzaTime;
@property(nonatomic) _Bool xmppPassiveMode; // @synthesize xmppPassiveMode=_xmppPassiveMode;
@property(retain, nonatomic) WAECKeyPair *clientStaticKeyPair; // @synthesize clientStaticKeyPair=_clientStaticKeyPair;
@property(copy, nonatomic) NSString *xmppUser; // @synthesize xmppUser=_xmppUser;
@property(nonatomic) __weak id <XMPPStreamDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)fallbackAddressesDidChange:(id)arg1;
@property(readonly, nonatomic) double elapsedTimeSinceLastReadData;
- (void)xmppSocketDidDisconnect:(id)arg1;
- (void)invalidateBusySocketTimer;
- (void)reportIdleSocketAfterDelay;
- (void)xmppSocketDidWriteData:(id)arg1;
- (void)xmppSocket:(id)arg1 didReadData:(id)arg2;
- (void)startStreamWithLoginPayload:(id)arg1 connectionInfo:(id)arg2;
- (id)prependNoiseFrameHeaderToPayload:(id)arg1;
- (void)writeNoiseFrameToSocketWithPayload:(id)arg1 encryptWithStreamCipher:(_Bool)arg2 timeout:(double)arg3;
- (void)xmppSocket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)xmppSocket:(id)arg1 willConnectToHost:(id)arg2;
- (void)prewarm;
@property(nonatomic) _Bool useDefaultPortFirst;
@property(copy, nonatomic) NSNumber *portOverride;
@property(copy, nonatomic) NSString *hostnameOverride;
@property(readonly, nonatomic, getter=isSocketAlive) _Bool socketAlive;
@property(copy, nonatomic) NSData *debugEdgeRoutingInfoFromPush;
@property(copy, nonatomic) NSNumber *debugUseFBHostsFromPush;
@property(copy, nonatomic) NSString *hintIPAddress;
@property(readonly, nonatomic) NSNumber *currentPort;
@property(readonly, copy, nonatomic) NSString *currentIPAddress;
@property(readonly, copy, nonatomic) NSString *currentHost;
@property(nonatomic) _Bool bindsToCellularNetwork;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
- (void)processElements:(id)arg1;
- (void)processStanza:(id)arg1;
- (void)outputProfilingResults;
- (unsigned long long)sendElements:(id)arg1;
- (unsigned long long)sendElements:(id)arg1 timeout:(double)arg2;
- (unsigned long long)sendElement:(id)arg1;
- (unsigned long long)sendElement:(id)arg1 timeout:(double)arg2;
- (unsigned int)noiseFrameLengthFromHeader:(id)arg1;
- (unsigned long long)internalSendElements:(id)arg1 timeout:(double)arg2;
- (void)sendStreamEndAndDisconnect;
- (void)shutDownStream;
- (void)disconnectImmediately;
- (void)connect;
- (void)dealloc;
- (id)initWithQueue:(id)arg1 dnsResolver:(id)arg2 defaultTimeout:(double)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

