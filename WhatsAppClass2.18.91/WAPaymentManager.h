//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WAPaymentStorageDelegate-Protocol.h"

@class NSString, WAChatManager, WAChatStorage, WAPaymentExpirePendingCollectRequestsTask, WAPaymentNameDirectory, WAPaymentSettings, WAPaymentStorage, WAPaymentSyncPaymentMethodsTask, WAPaymentSyncTransactionTask, WAPaymentUPIPSPConfiguration, WAPersistentKeyValueStore, WAPersistentRequestManager, WARepeatingBlockTask, WATaskQueue;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface WAPaymentManager : NSObject <WAPaymentStorageDelegate>
{
    WAChatManager *_chatManager;
    WAChatStorage *_chatStorage;
    NSObject<OS_dispatch_queue> *_mainDispatchQueue;
    WAPaymentSettings *_paymentSettings;
    WAPaymentStorage *_paymentStorage_lazy;
    WAPersistentKeyValueStore *_persistentKeyValueStore;
    WAPersistentRequestManager *_persistentRequestManager;
    WAPaymentUPIPSPConfiguration *_pspConfiguration;
    WAPaymentSyncPaymentMethodsTask *_taskToSyncPaymentMethods;
    WAPaymentSyncTransactionTask *_taskToSyncTransactions;
    WARepeatingBlockTask *_taskToSyncHandles;
    WARepeatingBlockTask *_taskToSyncBlockedHandles;
    WARepeatingBlockTask *_taskToProcessPendingTransactions;
    WAPaymentExpirePendingCollectRequestsTask *_taskToExpirePendingCollectRequests;
    WAPaymentNameDirectory *_paymentNameDirectory;
}

+ (_Bool)isSandboxEnabled;
+ (_Bool)isTOSAccepted;
+ (_Bool)isAccountSetup;
+ (void)setSandboxEnabled:(_Bool)arg1;
+ (void)setTosAccepted:(_Bool)arg1;
+ (void)setAccountSetup:(_Bool)arg1;
@property(readonly, nonatomic) WAPersistentRequestManager *persistentRequestManager; // @synthesize persistentRequestManager=_persistentRequestManager;
@property(readonly, nonatomic) WAPaymentSettings *paymentSettings; // @synthesize paymentSettings=_paymentSettings;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *mainDispatchQueue; // @synthesize mainDispatchQueue=_mainDispatchQueue;
@property(readonly, nonatomic) WAChatStorage *chatStorage; // @synthesize chatStorage=_chatStorage;
@property(readonly, nonatomic) WAChatManager *chatManager; // @synthesize chatManager=_chatManager;
- (void).cxx_destruct;
- (void)fullyResetStateAndResetTOS:(_Bool)arg1;
- (void)updateTransaction:(id)arg1 toStatus:(long long)arg2 save:(_Bool)arg3 notify:(_Bool)arg4;
- (void)updateKVSValue:(id)arg1 forKey:(id)arg2;
- (id)fetchKVSValueForKey:(id)arg1;
- (id)prepareCoordinatorWithViewController:(id)arg1 delegate:(id)arg2;
@property(readonly, nonatomic) WAPaymentNameDirectory *paymentNameDirectory;
@property(copy, nonatomic) NSString *supportPhoneNumber;
@property(readonly, nonatomic) _Bool hasPaymentAccount;
- (void)handleServerTimeShiftNotification:(id)arg1;
- (void)groupMemberParticipantRemoved:(id)arg1;
- (void)didDeclineIncomingPaymentRequestTransaction:(id)arg1;
- (void)didDeclineIncomingPaymentRequestMessage:(id)arg1;
- (void)failAllPendingCollectRequests;
- (void)updateOutgoingCollectRequestStatusForMessageSend:(id)arg1;
- (id)addOrUpdateCollectRequestForMessageID:(id)arg1 amount_1000:(long long)arg2 currency:(id)arg3 receiverJID:(id)arg4 senderJID:(id)arg5 groupJID:(id)arg6 messageDate:(id)arg7 expiryDate:(id)arg8 chatSessionTransaction:(id)arg9;
- (id)addOrUpdateOutgoingCollectRequestWithCLTransactionId:(id)arg1 amount_1000:(long long)arg2 currency:(id)arg3 receiverJID:(id)arg4 senderHandle:(id)arg5 note:(id)arg6;
- (id)addOrUpdateOutgoingTransactionForMessageID:(id)arg1 amount_1000:(long long)arg2 currency:(id)arg3 groupJID:(id)arg4 receiverJID:(id)arg5 receiverHandle:(id)arg6 senderJID:(id)arg7 senderHandle:(id)arg8 clTransactionId:(id)arg9 encryptedMpin:(id)arg10 type:(long long)arg11 sourceCredentialId:(id)arg12 messageDate:(id)arg13 requestMessageID:(id)arg14 chatSessionTransaction:(id)arg15;
- (id)addOrUpdateTransactionFromStanza:(id)arg1 messageID:(id)arg2 messageDate:(id)arg3;
- (void)updateRequestTransactionForOutgoingPaymentTransaction:(id)arg1;
- (id)addOrUpdateTransaction:(id)arg1 forceUpdate:(_Bool)arg2 messageDate:(id)arg3;
- (id)addOrUpdateTransaction:(id)arg1 forceUpdate:(_Bool)arg2;
- (void)postTransactionAddOrUpdateNotificationForTransaction:(id)arg1 isNewTransaction:(_Bool)arg2;
- (id)pendingP2PTransactions;
- (void)deleteTransactionWithMessageID:(id)arg1 referenceMessageID:(id)arg2;
- (id)transactionsWithStanzaId:(id)arg1;
- (id)transactionWithMessageID:(id)arg1;
- (id)transactionWithId:(id)arg1;
- (id)pendingCollectRequestTransactions:(unsigned long long)arg1;
- (id)transactions:(unsigned long long)arg1;
- (void)deleteCacheForTransaction:(id)arg1;
- (id)transactionCache:(id)arg1;
- (void)updatePaymentAccount:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)accountWithId:(id)arg1;
- (id)accounts;
- (id)defaultPaymentAccount;
- (void)paymentStorage:(id)arg1 didUpdatePaymentAccount:(id)arg2;
- (void)paymentStorageDidCreateDatabase:(id)arg1;
- (void)dealloc;
- (id)initWithChatManager:(id)arg1 chatStorage:(id)arg2 paymentSettings:(id)arg3 persistentKeyValueStore:(id)arg4 persistentRequestManager:(id)arg5;
- (void)declineOutgoingCollectRequestWithTransaction:(id)arg1;
- (void)checkCollectRequestTransactionForIncomingPaymentMessage:(id)arg1;
- (void)addOrUpdatePaymentTransactionForIncomingCollectRequestMessage:(id)arg1;
- (void)reloadPaymentMessageBubbleAfterTransactionUpdate:(id)arg1;
- (void)reloadMessageBubblesAfterPaymentTransactionsUpdate:(id)arg1;
- (void)logSelectAccountEventWithEventId:(id)arg1 numberOfAccounts:(unsigned long long)arg2 accountIndexSelected:(unsigned long long)arg3 cancelled:(_Bool)arg4;
- (void)logVerifyPhoneNumberHelperViewEventWithEventId:(id)arg1 verifyTapped:(_Bool)arg2 cancelled:(_Bool)arg3;
- (void)logBankSelectionEventWithEventId:(id)arg1 bankName:(id)arg2 accountsExist:(_Bool)arg3 cancelled:(_Bool)arg4;
- (void)logTOSSelectionEventWithEventId:(id)arg1 accountsExist:(_Bool)arg2 eventType:(long long)arg3;
- (void)logApiEventWithEventId:(id)arg1 errorCode:(id)arg2 errorText:(id)arg3 bankId:(id)arg4 pspId:(id)arg5 requestName:(long long)arg6;
- (void)logTransactionUpdatedEvent:(id)arg1 eventId:(id)arg2 bankId:(id)arg3;
- (void)logTransactionCreatedEvent:(id)arg1 eventId:(id)arg2 bankId:(id)arg3;
- (void)logCheckPinSucceededEventWithEventId:(id)arg1 bankId:(id)arg2 seqNumber:(id)arg3 retryCount:(long long)arg4;
- (void)logCheckPinFailedEventWithEventId:(id)arg1 errorCode:(id)arg2 errorText:(id)arg3 bankId:(id)arg4 seqNumber:(id)arg5 retryCount:(long long)arg6 wam_enum_check_pin_user_error_reason_type:(long long)arg7;
- (void)logGetAccountsEventWithEventId:(id)arg1 errorCode:(id)arg2 errorText:(id)arg3 bankId:(id)arg4 accountsExist:(_Bool)arg5;
- (void)logDeviceBindingEventWithEventId:(id)arg1 errorCode:(id)arg2 errorText:(id)arg3 bankId:(id)arg4 smsRetryCount:(long long)arg5 smsNumber:(id)arg6 requestRetryCount:(long long)arg7 requestRetryDelay:(long long)arg8;
- (void)cancelExpirePendingCollectRequestsTask;
- (void)rescheduleExpirePendingCollectRequestsTaskForNewRequest:(id)arg1;
- (void)scheduleExpirePendingCollectRequestsTask;
- (void)cancelProcessPendingTransactions;
- (void)scheduleProcessPendingTransactions;
- (id)processPendingTransactionsTask;
- (void)didChangeAccountSetUpState;
- (void)postTransactionUpdatedNotification:(id)arg1;
- (id)paymentTransactionsWithStatuses:(id)arg1 types:(id)arg2;
- (id)paymentTransactionsWithStatus:(long long)arg1;
- (void)insertPaymentRequestTransactionExpirySystemEventForTransaction:(id)arg1;
- (_Bool)insertSendPaymentSystemEventForChatJID:(id)arg1;
- (void)insertIntentSentSystemEventForChatJID:(id)arg1;
- (_Bool)insertSetupPaymentAccountSystemEventForChatJID:(id)arg1;
- (void)insertSystemEventForTransaction:(id)arg1 previousStatus:(long long)arg2;
- (id)addOrUpdateBankAccount:(id)arg1;
- (void)resetPaymentStorage;
- (id)preparedPaymentStorage;
@property(readonly, nonatomic) WAPaymentStorage *paymentStorage;
- (void)scheduleDeleteExpiredCacheTask;
- (void)cancelBackgroundTasksToSyncDatabase;
- (void)scheduleBackgroundTasksToSyncDatabase;
- (void)scheduleCleanUpBackgroundTasks;
@property(readonly, nonatomic) WATaskQueue *queueForBackgroundTasks;
- (void)notifyAboutRequestCompletion:(id)arg1 error:(id)arg2 userInfo:(id)arg3;
- (void)syncMethodsFromResponse:(id)arg1;
- (void)registerHandlersForPersistentRequestManager:(id)arg1;
- (id)sharedObjectKeyForPersistentRequestManager:(id)arg1;
- (void)cancelSyncTransactionTask;
- (void)scheduleSyncTransactionTask;
- (id)syncTransactionsTask;
- (void)cancelSyncPaymentMethodsTask;
- (void)scheduleSyncPaymetMethodsTask;
- (id)syncPaymentMethodsTask;
- (id)requestTOSAcceptanceState;
- (id)requestTOSAccept;
- (id)requestRemoveCredentialId:(id)arg1 deviceId:(id)arg2 bankCode:(id)arg3 provider:(id)arg4;
- (id)requestGetTransactionsWithBefore:(id)arg1 after:(id)arg2 limit:(long long)arg3;
- (id)requestGetTransactionById:(id)arg1;
- (id)requestGetMethods;
- (id)requestEditDefaultCredentialForDeviceId:(id)arg1 credentialId:(id)arg2 makeDefault:(_Bool)arg3 bankCode:(id)arg4 provider:(id)arg5;
- (id)requestDeleteAccountForDeviceId:(id)arg1 provider:(id)arg2;
- (id)requestCreateAccount;
- (id)requestAccountSetupState;
- (void)handleTransactionNotification:(id)arg1;
- (void)processIncomingPayNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)registerXMPPNotificationHandler;
- (void)checkBlockedStatusAndDeclineIncomingCollectRequestForTransaction:(id)arg1 fromViewController:(id)arg2;
- (void)declineIncomingCollectRequestForTransaction:(id)arg1 fromViewController:(id)arg2;
- (_Bool)shouldShowLoadingIndicatorForTransaction:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

