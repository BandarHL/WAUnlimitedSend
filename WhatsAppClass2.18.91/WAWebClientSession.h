//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData, NSDate, NSString, WAWebClientSessionData;

__attribute__((visibility("hidden")))
@interface WAWebClientSession : NSObject
{
    WAWebClientSessionData *_sessionData;
    _Bool _syncInProgress;
    _Bool _preemptiveChatResponseSent;
    _Bool _preemptiveContactsResponseSent;
    NSData *_sharedSecret;
}

+ (void)fixExpirationTimeOfOldTemporarySessions;
+ (id)existingSessionWithBrowserID:(id)arg1;
+ (id)mostRecentlyActiveSession;
+ (id)currentSession;
+ (void)clearCurrent;
+ (id)currentBrowserID;
@property(nonatomic) _Bool preemptiveContactsResponseSent; // @synthesize preemptiveContactsResponseSent=_preemptiveContactsResponseSent;
@property(nonatomic) _Bool preemptiveChatResponseSent; // @synthesize preemptiveChatResponseSent=_preemptiveChatResponseSent;
@property(nonatomic) _Bool syncInProgress; // @synthesize syncInProgress=_syncInProgress;
@property(copy, nonatomic) NSData *sharedSecret; // @synthesize sharedSecret=_sharedSecret;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSDate *lastPushTime;
@property(readonly, copy, nonatomic) NSDate *firstPushTime;
@property(copy, nonatomic) NSString *location;
@property(copy, nonatomic) NSString *clientToken;
@property(copy, nonatomic) NSString *browser;
@property(copy, nonatomic) NSString *operatingSystem;
@property(copy, nonatomic) NSDate *lastActiveTime;
@property(copy, nonatomic) NSDate *deviceLoginTime;
@property(copy, nonatomic) NSString *webRef;
@property(readonly, copy, nonatomic) NSString *browserID;
@property(readonly, nonatomic, getter=isTablet) _Bool tablet;
- (id)copyOfSessionData;
- (id)encrypt:(id)arg1;
- (id)hashWithSharedSecret:(id)arg1;
- (id)unserialize:(id)arg1 streamError:(out _Bool *)arg2;
- (id)serialize:(id)arg1;
- (void)setPushTime:(id)arg1;
- (void)resetState;
- (void)setOrExtendTimeoutIfNeeded;
- (void)resetTimeoutIfNeeded;
- (void)makeInactive;
- (void)makeTemporary;
- (void)remove;
- (void)makeCurrent;
- (id)description;
- (void)save;
- (void)createAndSave;
- (id)initWithNewBrowserID:(id)arg1 deviceLoginTime:(id)arg2;
- (id)initWithSessionData:(id)arg1 sharedSecret:(id)arg2;

@end

