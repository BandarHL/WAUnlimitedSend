//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov  9 2017 20:17:28).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WAVideoCaptureViewDelegate-Protocol.h"

@class AVAudioPlayer, CMMotionManager, NSCache, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSTimer, WAAudioActivity, WACallInfo, WACallNotificationManager, WACallProviderDelegate, WATimer, WAVideoCaptureView;
@protocol OS_dispatch_queue, WACallManagerDelegate;

__attribute__((visibility("hidden")))
@interface WACallManager : NSObject <WAVideoCaptureViewDelegate>
{
    _Bool _voipInited;
    _Bool _callBlocked;
    WACallProviderDelegate *_callProviderDelegate;
    _Bool _needsUninitializeCall;
    _Bool _callBusy;
    WATimer *_uninitializeCallTimer;
    WATimer *_rejectTimer;
    double _outgoingCallStartTime;
    _Bool _callStartedAsVideoCall;
    int _callEndReason;
    long long _currentOrientation;
    CMMotionManager *_motionManager;
    NSMutableDictionary *_participantVideoViews;
    NSObject<OS_dispatch_queue> *_voip_queue;
    NSObject<OS_dispatch_queue> *_recording_write_queue;
    _Bool _isPeerRequestingVideoUpgrade;
    _Bool _isSelfRequestingVideoUpgrade;
    _Bool _disableVideoScheduled;
    NSMutableArray *_offlineStanzaQueue;
    NSMutableSet *_offlineProcessedCallStanza;
    NSMutableDictionary *_offlineCutoffTimestamp;
    NSMutableArray *_offlineOffer;
    NSMutableArray *_recentlyTerminatedCalls;
    int _rekeyTransactionID;
    _Bool _e2eDecryptFailed;
    WATimer *_ongoingCallTimer;
    WATimer *_callUpgradeRequestTimer;
    NSMutableDictionary *_groupCallInviteTimerForParticipantJID;
    int _callWakeupSource;
    _Bool _sendUserRating;
    int _userRating;
    NSDate *_lastShowRatingDate;
    NSString *_userRatingText;
    unsigned int _userRatingProblems;
    int _callStartDelay;
    CDStruct_bd7d4782 _savedFieldStats;
    _Bool _savedFieldStatsValid;
    int _callUISource;
    NSString *_callPeerPlatform;
    NSString *_callPeerVersion;
    _Bool _isScreenDimmed;
    WAAudioActivity *_incomingSoundActivity;
    AVAudioPlayer *_endCallSoundPlayer;
    WAAudioActivity *_callActivity;
    unsigned int _callSoundPlayer;
    NSTimer *_vibrationTimer;
    _Bool _isCallInterrupted;
    _Bool _isCallBackground;
    _Bool _isVideoViewBackground;
    NSCache *_incomingCallOfferCache;
    _Bool _isCaller;
    _Bool _relayBindsFailed;
    _Bool _pendingCall;
    _Bool _callConnected;
    _Bool _callRejectedByPeer;
    _Bool _callTimedout;
    _Bool _endCallInProgress;
    _Bool _showRatingScreenForCall;
    _Bool _defaultPortraitMode;
    _Bool _shouldUploadLogs;
    _Bool _uploadFieldStatsAtCallEnd;
    _Bool _badASN;
    int _callState;
    int _portraitModeThreshold;
    int _landscapeModeThreshold;
    int _horizontalDegreeThreshold;
    id <WACallManagerDelegate> _delegate;
    WACallInfo *_callInfo;
    WACallInfo *_lastCallInfo;
    long long _batteryLevelAtCallStart;
    WACallNotificationManager *_callNotificationManager;
    WAVideoCaptureView *_selfVideoSubview;
    NSString *_callOfferElapsedTime;
    NSString *_callIDFromOffer;
    NSString *_callOfferPushName;
    long long _showRatingIntervalInSeconds;
    double _dimScreenInVideoCallPercentage;
    long long _spamCallThresholdSeconds;
}

+ (_Bool)isCellularCallActive;
+ (_Bool)isVideoCallEnabled;
+ (id)sharedManager;
@property long long spamCallThresholdSeconds; // @synthesize spamCallThresholdSeconds=_spamCallThresholdSeconds;
@property _Bool badASN; // @synthesize badASN=_badASN;
@property _Bool uploadFieldStatsAtCallEnd; // @synthesize uploadFieldStatsAtCallEnd=_uploadFieldStatsAtCallEnd;
@property _Bool shouldUploadLogs; // @synthesize shouldUploadLogs=_shouldUploadLogs;
@property _Bool defaultPortraitMode; // @synthesize defaultPortraitMode=_defaultPortraitMode;
@property int horizontalDegreeThreshold; // @synthesize horizontalDegreeThreshold=_horizontalDegreeThreshold;
@property int landscapeModeThreshold; // @synthesize landscapeModeThreshold=_landscapeModeThreshold;
@property int portraitModeThreshold; // @synthesize portraitModeThreshold=_portraitModeThreshold;
@property double dimScreenInVideoCallPercentage; // @synthesize dimScreenInVideoCallPercentage=_dimScreenInVideoCallPercentage;
@property long long showRatingIntervalInSeconds; // @synthesize showRatingIntervalInSeconds=_showRatingIntervalInSeconds;
@property _Bool showRatingScreenForCall; // @synthesize showRatingScreenForCall=_showRatingScreenForCall;
@property(copy, nonatomic) NSString *callOfferPushName; // @synthesize callOfferPushName=_callOfferPushName;
@property(copy, nonatomic) NSString *callIDFromOffer; // @synthesize callIDFromOffer=_callIDFromOffer;
@property(copy, nonatomic) NSString *callOfferElapsedTime; // @synthesize callOfferElapsedTime=_callOfferElapsedTime;
@property(retain, nonatomic) WAVideoCaptureView *selfVideoSubview; // @synthesize selfVideoSubview=_selfVideoSubview;
@property int callState; // @synthesize callState=_callState;
@property _Bool endCallInProgress; // @synthesize endCallInProgress=_endCallInProgress;
@property(readonly, nonatomic) WACallNotificationManager *callNotificationManager; // @synthesize callNotificationManager=_callNotificationManager;
@property(readonly, nonatomic) _Bool callTimedout; // @synthesize callTimedout=_callTimedout;
@property(readonly, nonatomic) _Bool callRejectedByPeer; // @synthesize callRejectedByPeer=_callRejectedByPeer;
@property(nonatomic) _Bool callConnected; // @synthesize callConnected=_callConnected;
@property(nonatomic) long long batteryLevelAtCallStart; // @synthesize batteryLevelAtCallStart=_batteryLevelAtCallStart;
@property(nonatomic) _Bool pendingCall; // @synthesize pendingCall=_pendingCall;
@property(nonatomic) _Bool relayBindsFailed; // @synthesize relayBindsFailed=_relayBindsFailed;
@property(readonly, nonatomic) _Bool isCaller; // @synthesize isCaller=_isCaller;
@property(retain, nonatomic) WACallInfo *lastCallInfo; // @synthesize lastCallInfo=_lastCallInfo;
@property(retain, nonatomic) WACallInfo *callInfo; // @synthesize callInfo=_callInfo;
@property(nonatomic) __weak id <WACallManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) WACallProviderDelegate *callProviderDelegate; // @synthesize callProviderDelegate=_callProviderDelegate;
- (void).cxx_destruct;
- (void)updateNetworkMedium;
- (void)networkStatusChanged:(id)arg1;
- (void)handleNetworkChange;
- (void)captureSessionRuntimeError:(id)arg1;
- (void)deviceOrientationChanged:(long long)arg1;
- (void)stopOrientationMonitoring;
- (double)accelerationToDegree:(CDStruct_39925896)arg1;
- (void)accelerometerDidUpdateWithData:(id)arg1;
- (void)startOrientationMonitoring;
- (void)startOutgoingCallWith:(id)arg1 withVideo:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)attemptOutgoingCellularVoiceCallWithPhoneURL:(id)arg1 fromViewController:(id)arg2;
- (void)internalAttemptOutgoingVoiceCallWithJID:(id)arg1 callUISource:(int)arg2 withVideo:(_Bool)arg3;
- (void)attemptOutgoingVoiceCallWithJID:(id)arg1 callUISource:(int)arg2 withVideo:(_Bool)arg3;
- (void)addMissedCallFromPeerJID:(id)arg1 withParticipantsJID:(id)arg2 isVideoCall:(_Bool)arg3 timestamp:(double)arg4 callOfferElapsedTime:(id)arg5;
- (void)addCallEventWithParticipants:(id)arg1 outcome:(int)arg2;
- (id)getCurrentPeerJID;
- (id)getCurrentCallId;
- (id)getCallInfoSync;
@property(readonly, nonatomic) _Bool isWebClientCallActive;
@property(readonly, nonatomic) int callDuration;
@property(readonly, nonatomic) _Bool isInitiatingCall;
@property(readonly, nonatomic) _Bool isCallStarted;
@property(readonly, nonatomic) _Bool isCallActive;
- (void)showedRatingScreenForCall;
- (_Bool)shouldGetRating;
- (_Bool)shouldShowRatingScreenForCall;
- (void)reallyAcceptCall;
- (void)acceptCall;
- (void)endCallWithReason:(int)arg1;
- (void)mute:(_Bool)arg1;
@property(readonly, nonatomic) _Bool callEndedByUser;
@property(readonly, nonatomic) _Bool callFailed;
@property(readonly, nonatomic) NSString *callID;
@property(readonly, nonatomic) NSString *peerJid;
- (id)getCallInfo;
- (void)showAlertView:(id)arg1;
- (void)handleRejectReason:(id)arg1 withParticipantJID:(id)arg2;
- (void)handleCallFailureWithErrorCode:(long long)arg1;
- (_Bool)handleCallAcceptedFromCallKit:(id)arg1;
- (void)handleRelayBindsFailed;
- (void)handleCallInterruptionStateChanged:(int)arg1;
- (void)videoViewEnterBackground;
- (void)videoViewEnterForeground;
- (void)callEnterBackground;
- (void)callEnterForeground;
- (void)handleCallStateOnEnteringForeground;
- (void)blockedContactsListUpdated:(id)arg1;
- (void)uninitializeCallStateIfNeeded;
- (void)setNeedsUninitializeCallState;
- (void)initializeCallStateAsCaller:(_Bool)arg1 containsVideo:(_Bool)arg2;
- (void)dealloc;
- (void)registerDynamicCapabilities;
- (_Bool)hardwareHEVCEncodeSupport;
- (void)doVoIPInit;
- (id)init;
- (void)notifyGroupCallError:(int)arg1 withJID:(id)arg2;
- (void)notifyUncallableUserWithJID:(id)arg1 isVideoCall:(_Bool)arg2;
- (void)notifyFallbackToVoiceCall;
- (void)notifyBlockedNetworkForPeerJID:(id)arg1;
- (void)notifyBlockedNetwork;
- (void)notifyIncompatibleNetwork;
- (void)callInterruptionDidEnd:(id)arg1;
- (void)callInterruptionDidBegin:(id)arg1;
- (void)endAudioSessionInterruptionIfNeeded;
- (void)removeAudioSessionInterrptionObserver;
- (void)addAudioSessionInterruptionObserver;
- (void)stopIncomingCallVibration;
- (void)onVibrateTimer;
- (void)startIncomingCallVibration;
- (void)audioSessionDidChangeRingerState:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)playCallEndedSound;
- (void)stopIncomingCallSound;
- (void)playIncomingCallSound;
- (id)descriptionOfAllPorts:(id)arg1;
- (void)logAudioRoutes;
- (void)routeAudioToOutputRoute:(id)arg1;
- (id)currentActiveAudioRoute;
- (id)availableAudioRoutes;
- (void)restorePreviousAudioCategory;
- (void)startVoipAudioSessionIfNecessaryForVideoCall:(_Bool)arg1;
- (void)handelCallTerminatedByPeerInCallState:(int)arg1;
- (void)restoreScreenBrightness;
- (void)dimScreenBrightnessForVideoCall;
- (void)logVoIP:(const char *)arg1 level:(int)arg2;
- (void)applyAudioSettings;
- (void)registerCallbacks;
- (void)getKeygenVersion:(int *)arg1 fromEncoptElement:(id)arg2;
- (void)getEncryptionBytes:(char *)arg1 length:(int *)arg2 fromEncryptionElement:(id)arg3 registrationElement:(id)arg4 peerJID:(id)arg5 callID:(id)arg6;
- (void)setEncoptElementForStanza:(id)arg1 keygenVersion:(int)arg2;
- (void)setEncryptionElementForStanza:(id)arg1 encryptionBytes:(id)arg2 encryptionType:(id)arg3 retryCount:(int)arg4;
- (double)parseUserIdFromJid:(id)arg1;
- (void)submitSavedFieldStatsWithoutUserRating;
- (void)submitSavedFieldStatsWithUserRating:(int)arg1 problemBitmask:(unsigned int)arg2 text:(id)arg3;
- (void)saveFieldStats:(const CDStruct_bd7d4782 *)arg1;
- (void)submitFieldStatsForMissedIncomingCall:(id)arg1 callOfferElapsedTime:(id)arg2;
- (long long)getRadioType;
- (void)submitFieldStatsInternal:(const CDStruct_bd7d4782 *)arg1;
- (void)submitFieldStats:(const CDStruct_bd7d4782 *)arg1;
- (long long)getCallResultFromSavedFieldStats;
- (void)flushSavedFieldStats;
- (void)initFieldStats;
- (void)updateCallProviderDelegate;
- (void)updateCallState;
- (void)handleGroupInfoChanged;
- (void)cancelInviteToParticipantJID:(id)arg1;
- (void)addParticipantJID:(id)arg1;
- (void)markCallAsTrusted;
- (void)blockCaller;
- (void)reportCallAndBlockContact:(_Bool)arg1;
- (_Bool)isSpam;
- (_Bool)shouldShowSpamReportView;
- (void)cancelGroupCallInviteForConnectedAndRemovedParticipants;
- (void)cancelAllGroupCallInviteTimeouts;
- (void)cancelGroupCallInviteTimeoutForParticipantJID:(id)arg1;
- (void)startGroupCallInviteTimeout:(double)arg1 forParticipantJID:(id)arg2;
- (void)cancelCallUpgradeRequestTimeout;
- (void)startCallUpgradeRequestTimeout:(double)arg1;
- (void)cancelCallTimeout;
- (void)startCallTimeout:(double)arg1;
- (void)handleAudioVideoSwitchErrorForSelector:(SEL)arg1 status:(int)arg2;
- (id)callViewParticipantInfoFromParticipantInfo:(id)arg1;
- (void)updateVideoPausedState;
- (id)getParticipantVideoViewForParticipantJID:(id)arg1;
- (void)destroyAllParticipantVideoViews;
- (void)destroyParticipantVideoViewForParticipantJID:(id)arg1;
- (void)addParticipantVideoView:(id)arg1 forParticipantJID:(id)arg2;
- (void)addSelfVideoToView:(id)arg1;
- (void)destroySelfVideo;
- (struct CGSize)videoSizeForParticipant:(id)arg1;
- (void)updateVideoStateOfPeers;
- (void)switchCamera;
- (void)turnCameraOff;
- (void)turnCameraOn;
@property(readonly, nonatomic) _Bool peerHasRequestedVideo;
@property(readonly, nonatomic) _Bool callHasVideo;
- (void)rejectUpgradeToVideoCall:(_Bool)arg1;
- (void)cancelUpgradeToVideoCall:(_Bool)arg1;
- (void)reallyAcceptUpgradeToVideoCall;
- (void)acceptUpgradeToVideoCall;
- (void)reallyRequestUpgradeToVideoCall;
- (void)requestUpgradeToVideoCallWithCameraPermission;
- (void)requestUpgradeToVideoCall;
- (void)handleVideoCallUpgradeCompleted;
- (void)enableVideo;
- (void)disableVideo;
- (void)ensureVideoEnabledForVideoState:(int)arg1 changedForPeer:(_Bool)arg2;
- (void)handleSelfVideoStateChanged:(int)arg1;
- (void)handleVideoCallIncomingUpgradeRequest;
- (void)handlePeerVideoStateChanged:(int)arg1;
- (void)setupSelfVideo;
- (void)createAndSetupSelfVideo;
- (void)initVideoState;
- (float)getVoipParamAsFloat:(id)arg1;
- (_Bool)getVoipParamAsBool:(id)arg1;
- (int)getVoipParamAsInt:(id)arg1;
- (_Bool)hasVoipParam:(id)arg1;
- (id)getVoipParamFromPath:(id)arg1;
- (void)fillDefaultVoipParams:(struct wa_call_voip_params *)arg1;
- (void)fillVoipParam:(struct wa_call_voip_params *)arg1 fromStanza:(id)arg2 withMessageType:(int)arg3 withCallId:(id)arg4;
- (id)parseVoipParamFromStanza:(id)arg1 withCallId:(id)arg2;
- (void)initVoipParams;
- (int)staleTimeoutOptionFromStanza:(id)arg1 withCallId:(id)arg2;
- (void)getClientOptionsFromStanza:(id)arg1;
- (void)fillVoipParam:(struct wa_call_voip_params *)arg1 fromDefaultAndStanza:(id)arg2 withMessageType:(int)arg3 withCallId:(id)arg4;
- (int)webClientActionToCallAction:(unsigned long long)arg1;
- (void)fillWebClientMessage:(CDStruct_c1d6783e *)arg1 withCallID:(id)arg2 peerJID:(id)arg3 isCaller:(_Bool)arg4 type:(int)arg5;
- (void)markCachedIncomingCallOfferStanzaAsHandled;
- (id)incomingCallOfferStanzaForCallID:(id)arg1 hasBeenHandled:(_Bool *)arg2;
- (void)cacheIncomingCallOfferStanza:(id)arg1 usingCallOfferMsg:(CDStruct_6234ced4 *)arg2;
- (void)webClientDidEndCallWithCallID:(id)arg1 callEvent:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)abandonWebClientCall;
- (int)handleIncomingWebClientSignalingMessage:(id)arg1 type:(unsigned char)arg2;
- (void)forwardCallKeyToWebClientFromCallOffer:(CDStruct_6234ced4 *)arg1;
- (void)webClientDidActivateOrRejectCall;
- (void)handleWebClientAcceptAction:(CDUnknownBlockType)arg1;
- (void)webClientDidRequestAction:(unsigned long long)arg1 onCall:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClientDidRelayCallOffer:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isRecentlyTerminatedCall:(id)arg1;
- (void)addRecentlyTerminatedCall:(id)arg1;
- (void)rejectCall:(CDStruct_b067a95f *)arg1 withReason:(id)arg2 withStanza:(id)arg3;
- (void)processIncomingCallStanza:(id)arg1;
- (void)handleVideoStateChangedAck:(id)arg1;
- (void)handleCallOfferAck:(id)arg1;
- (void)sendCallReceiptOrAck:(id)arg1 verifyDuration:(_Bool)arg2;
- (void)sendAckForStanza:(id)arg1 ackType:(id)arg2;
- (void)sendAck:(id)arg1 forTerminate:(id)arg2;
- (void)sendReceiptForStanza:(id)arg1 withType:(int)arg2;
- (void)receiptOrAckStanza:(id)arg1;
- (id)voipStanzaStringFromType:(int)arg1;
- (_Bool)setCallDurationForStanza:(id)arg1 withCallInfo:(id)arg2;
- (int)convertFromStanza:(id)arg1 buf:(void *)arg2 len:(int *)arg3 maxlen:(int)arg4 msgtype:(char *)arg5 reasonStr:(id *)arg6 isWebClientMsg:(_Bool *)arg7;
- (int)getPeerPlatformEnum:(id)arg1;
- (id)convertToStanza:(char *)arg1 len:(int)arg2 cipherBytes:(id)arg3 cipherType:(id)arg4 shouldVerifyDuration:(_Bool *)arg5;
- (id)popOfflineOfferForCallId:(id)arg1;
- (void)notifyEndofOffline;
- (void)processOfflineStanza:(id)arg1;
- (void)processOfflineTerminate:(id)arg1;
- (void)processOfflineOffer:(id)arg1;
- (void)handleCallStanzaTimeout:(id)arg1;
- (void)handleCallRekeyReceipt:(id)arg1;
- (void)handleCallOfferReceipt:(id)arg1;
- (void)handleCallAck:(id)arg1;
- (int)handleIncomingSignalingMessage:(void *)arg1 len:(unsigned int)arg2;
- (void)handleIncomingCallStanza:(id)arg1;
- (void)generateAndSendMessage:(void *)arg1 messageLength:(int)arg2 toPeer:(const char *)arg3 withEncryptionElement:(char *)arg4 length:(int)arg5;
- (void)sendMessage:(void *)arg1 messageLength:(int)arg2;
- (void)sendCallStanza:(id)arg1 verifyDuration:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

